---
openapi: 3.0.2
info:
  title: VMware Cloud Foundation as a Service API
  description: IBM Cloud for VMware Cloud Foundation as a Service API
  version: "1.2.0"
  license:
    name: Copyright IBM Corporation 2025. All Rights Reserved
  x-alternate-name: vmware
  x-ibm-name: vmware
  x-sdk-supported-languages:
    - go
  x-codegen-config:
    go:
      apiPackage: "github.com/IBM/vmware-go-sdk"
servers:
  - url: https://api.{region}.vmware.cloud.ibm.com/v1
    variables:
      region:
        default: us-south
        enum:
          - us-south

paths:
  /director_sites:
    post:
      tags:
        - Director Site
      summary: Create a Cloud Director site instance
      description: Create an instance of a Cloud Director site with specified configurations. The Cloud Director site instance is the infrastructure and associated VMware software stack, which consists of VMware vCenter Server, VMware NSX-T, and VMware Cloud Director. VMware platform management and operations are performed with Cloud Director. The minimum initial order size is 2 hosts (2-Socket 32 Cores, 192 GB RAM) with 24 TB of 2.0 IOPS/GB storage.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.create
      x-ibm-events:
        events:
          - name: vmware.directorsite.create
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: create_director_sites
      parameters:
        - $ref: "#/components/parameters/accept_language"
        - $ref: "#/components/parameters/x-global-transaction-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectorSitePrototype"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X POST \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json' \
                        -d '{
                          "name": "my_director_site",
                          "private_only": True,
                          "console_connection_type": "private",
                          "ip_allow_list": ['1.1.1.1/24', '2.2.2.2/24'],
                          "resource_group": {"id": "some_resourcegroupid"},
                          "services": [
                            {
                              "name": "veeam"
                            },
                            {
                              "name": "vcda"
                            }
                          ]
                          "pvdcs": [
                            {
                              "name": "pvdc-1",
                              "data_center_name": "dal10",
                              "clusters": [
                                {
                                  "name": "cluster_1",
                                  "host_count": 3,
                                  "file_shares": {
                                    "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
                                    "STORAGE_TWO_IOPS_GB": 24000,
                                    "STORAGE_FOUR_IOPS_GB": 24000,
                                    "STORAGE_TEN_IOPS_GB": 8000
                                    },
                                  "host_profile": "BM_2S_20_CORES_192_GB"
                                  }
                                ]
                              }
                            ]
                          }'

          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/go-sdk-core/v5/core"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	fileSharesPrototypeModel := &vmwarev1.FileSharesPrototype{}

                      	clusterPrototypeModel := &vmwarev1.ClusterPrototype{
                      		Name:        core.StringPtr("cluster_1"),
                      		HostCount:   core.Int64Ptr(int64(2)),
                      		HostProfile: core.StringPtr("BM_2S_20_CORES_192_GB"),
                      		FileShares:  fileSharesPrototypeModel,
                      	}

                      	pvdcPrototypeModel := &vmwarev1.PVDCPrototype{
                      		Name:           core.StringPtr("pvdc-1"),
                      		DataCenterName: core.StringPtr("dal10"),
                      		Clusters:       []vmwarev1.ClusterPrototype{*clusterPrototypeModel},
                      	}

                      	createDirectorSitesOptions := vmwareService.NewCreateDirectorSitesOptions(
                      		"my_director_site",
                      		[]vmwarev1.PVDCPrototype{*pvdcPrototypeModel},
                      	)
                      	createDirectorSitesOptions.SetAcceptLanguage("en-us")
                      	createDirectorSitesOptions.SetXGlobalTransactionID("transaction1")

                      	directorSite, response, err := vmwareService.CreateDirectorSites(createDirectorSitesOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(directorSite, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectorSite"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
    get:
      tags:
        - Director Site
      summary: List Cloud Director site instances
      description: List all VMware Cloud Director site instances that the user can access in the cloud account.
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: list_director_sites
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.view
      parameters:
        - $ref: "#/components/parameters/accept_language"
        - $ref: "#/components/parameters/x-global-transaction-id"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/go-sdk-core/v5/core"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	listDirectorSitesOptions := vmwareService.NewListDirectorSitesOptions()
                      	listDirectorSitesOptions.SetAcceptLanguage("en-us")
                      	listDirectorSitesOptions.SetXGlobalTransactionID("transaction1")

                      	directorSiteCollection, response, err := vmwareService.ListDirectorSites(listDirectorSitesOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(directorSiteCollection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectorSiteCollection"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"

  /director_sites/{id}:
    parameters:
      - $ref: "#/components/parameters/siteIdUnqualified"
      - $ref: "#/components/parameters/accept_language"
      - $ref: "#/components/parameters/x-global-transaction-id"
    get:
      tags:
        - Director Site
      summary: Get a Cloud Director site instance
      description: Get a Cloud Director site instance by specifying the instance ID.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.view
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: get_director_site
      parameters:
        - $ref: "#/components/parameters/accept_language"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	getDirectorSiteOptions := vmwareService.NewGetDirectorSiteOptions(
                      		"site_id",
                      	)
                      	getDirectorSiteOptions.SetAcceptLanguage("en-us")
                      	getDirectorSiteOptions.SetXGlobalTransactionID("transaction1")

                      	directorSite, response, err := vmwareService.GetDirectorSite(getDirectorSiteOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(directorSite, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectorSite"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
    delete:
      tags:
        - Director Site
      summary: Delete a Cloud Director site instance
      description: Delete a Cloud Director site instance by specifying the instance ID.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.delete
      x-ibm-events:
        events:
          - name: vmware.directorsite.delete
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: delete_director_site
      parameters:
        - $ref: "#/components/parameters/accept_language"
        - $ref: "#/components/parameters/x-global-transaction-id"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X DELETE \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	deleteDirectorSiteOptions := vmwareService.NewDeleteDirectorSiteOptions(
                      		"site_id",
                      	)
                      	deleteDirectorSiteOptions.SetAcceptLanguage("en-us")
                      	deleteDirectorSiteOptions.SetXGlobalTransactionID("transaction1")

                      	directorSite, response, err := vmwareService.DeleteDirectorSite(deleteDirectorSiteOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(directorSite, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectorSite"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
  /director_sites/{site_id}/action/enable_veeam:
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/accept_language'
      - $ref: '#/components/parameters/x-global-transaction-id'
    post:
      tags:
        - Director Site
      summary: Enable or disable Veeam on a Cloud Director site
      description: Enable or disable Veeam on a Cloud Director site.
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: enable_veeam_on_pvdcs_list
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableServicePrototype'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEnabled'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "401":
          description: Unauthorized_Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
  /director_sites/{site_id}/action/enable_vcda:
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/accept_language'
      - $ref: '#/components/parameters/x-global-transaction-id'
    post:
      tags:
        - Director Site
      summary: Enable or disable VCDA on a Cloud Director site
      description: Enable or disable VMware Cloud Director Availability (VCDA) on a Cloud Director site.
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: enable_vcda_on_data_center
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableServicePrototype'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceEnabled'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "401":
          description: Unauthorized_Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
  /director_sites/{site_id}/vcda/connection_endpoints:
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/accept_language'
      - $ref: '#/components/parameters/x-global-transaction-id'
    post:
      tags:
        - Director Site
      summary: Create a VCDA connection
      description: Create a VMware Cloud Director Availability (VCDA) connection in the Cloud Director site identified by {site_id}.
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: create_director_sites_vcda_connection_endpoints
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VcdaConnectionPrototype'
      x-sdk-operations:
        request-examples:
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	createDirectorSitesVcdaConnectionEndpointsOptions := vmwareService.NewCreateDirectorSitesVcdaConnectionEndpointsOptions(
                      		"site_id",
                      		"private",
                      		"dal10",
                      	)
                      	createDirectorSitesVcdaConnectionEndpointsOptions.SetAcceptLanguage("en-us")
                      	createDirectorSitesVcdaConnectionEndpointsOptions.SetXGlobalTransactionID("transaction1")

                      	vcdaConnection, response, err := vmwareService.CreateDirectorSitesVcdaConnectionEndpoints(createDirectorSitesVcdaConnectionEndpointsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(vcdaConnection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VcdaConnection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "401":
          description: Unauthorized_Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
  /director_sites/{site_id}/services/vcda/connection_endpoints/{id}:
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/vcdaConnectionsIdUnqualified'
      - $ref: '#/components/parameters/accept_language'
      - $ref: '#/components/parameters/x-global-transaction-id'
    delete:
      tags:
        - Director Site
      summary: Delete a VCDA connection
      description: Delete a VMware Cloud Director Availability (VCDA) connection in the Cloud Director site identified by {site_id} and {vcda_connections_id}.
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: delete_director_sites_vcda_connection_endpoints
      x-sdk-operations:
        request-examples:
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	deleteDirectorSitesVcdaConnectionEndpointsOptions := vmwareService.NewDeleteDirectorSitesVcdaConnectionEndpointsOptions(
                      		"site_id",
                      		"vcda_connections_id",
                      	)
                      	deleteDirectorSitesVcdaConnectionEndpointsOptions.SetAcceptLanguage("en-us")
                      	deleteDirectorSitesVcdaConnectionEndpointsOptions.SetXGlobalTransactionID("transaction1")

                      	vcdaConnection, response, err := vmwareService.DeleteDirectorSitesVcdaConnectionEndpoints(deleteDirectorSitesVcdaConnectionEndpointsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(vcdaConnection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VcdaConnection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "401":
          description: Unauthorized_Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
    patch:
      tags:
        - Director Site
      summary: Update VCDA connection allowlist
      description: Update the allowlist for a private connection to a specific VCDA instance.
      requestBody:
        description: Data to update a private connection.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateConnectionPatch'
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: update_director_sites_vcda_connection_endpoints
      x-sdk-operations:
        request-examples:
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	updateDirectorSitesVcdaConnectionEndpointsOptions := vmwareService.NewUpdateDirectorSitesVcdaConnectionEndpointsOptions(
                      		"site_id",
                      		"vcda_connections_id",
                      	)
                      	updateDirectorSitesVcdaConnectionEndpointsOptions.SetAcceptLanguage("en-us")
                      	updateDirectorSitesVcdaConnectionEndpointsOptions.SetXGlobalTransactionID("transaction1")

                      	updatedVcdaConnection, response, err := vmwareService.UpdateDirectorSitesVcdaConnectionEndpoints(updateDirectorSitesVcdaConnectionEndpointsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(updatedVcdaConnection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: Task to update the connection created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedVcdaConnection'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "401":
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /director_sites/{site_id}/services/vcda/c2c_connections:
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/accept_language'
      - $ref: '#/components/parameters/x-global-transaction-id'
    post:
      tags:
        - Director Site
      summary: Create a VCDA cloud-to-cloud connection
      description: Create a VCDA cloud-to-cloud connection in the Cloud Director site identified by {site_id}.
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: create_director_sites_vcda_c2c_connection
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VcdaC2cPrototype'
      x-sdk-operations:
        request-examples:
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	createDirectorSitesVcdaC2cConnectionOptions := vmwareService.NewCreateDirectorSitesVcdaC2cConnectionOptions(
                      		"site_id",
                      		"dal10",
                      		"ddirw002-gr80d10vcda",
                      		"dirw274t02vcda",
                      		"jp-tok",
                      	)
                      	createDirectorSitesVcdaC2cConnectionOptions.SetAcceptLanguage("en-us")
                      	createDirectorSitesVcdaC2cConnectionOptions.SetXGlobalTransactionID("transaction1")

                      	vcdaC2c, response, err := vmwareService.CreateDirectorSitesVcdaC2cConnection(createDirectorSitesVcdaC2cConnectionOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(vcdaC2c, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VcdaC2c'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "401":
          description: Unauthorized_Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
  /director_sites/{site_id}/services/vcda/c2c_connections/{id}:
    parameters:
      - $ref: '#/components/parameters/siteId'
      - $ref: '#/components/parameters/connectionIdUnqualified'
      - $ref: '#/components/parameters/accept_language'
      - $ref: '#/components/parameters/x-global-transaction-id'
    delete:
      tags:
        - Director Site
      summary: Delete a VCDA cloud-to-cloud connection
      description: Delete a VCDA cloud-to-cloud connection in the Cloud Director site identified by {site_id}.
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: delete_director_sites_vcda_c2c_connection
      x-sdk-operations:
        request-examples:
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	deleteDirectorSitesVcdaC2cConnectionOptions := vmwareService.NewDeleteDirectorSitesVcdaC2cConnectionOptions(
                      		"site_id",
                      		"connection_id",
                      	)
                      	deleteDirectorSitesVcdaC2cConnectionOptions.SetAcceptLanguage("en-us")
                      	deleteDirectorSitesVcdaC2cConnectionOptions.SetXGlobalTransactionID("transaction1")

                      	vcdaC2c, response, err := vmwareService.DeleteDirectorSitesVcdaC2cConnection(deleteDirectorSitesVcdaC2cConnectionOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(vcdaC2c, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VcdaC2c'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "401":
          description: Unauthorized_Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
    patch:
      tags:
        - Director Site
      summary: Update note in the cloud-to-cloud connection
      description: Update the note in the VCDA cloud-to-cloud connection in the Cloud Director site identified by {site_id}.
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: update_director_sites_vcda_c2c_connection
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VcdaC2cPatch'
      x-sdk-operations:
        request-examples:
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	updateDirectorSitesVcdaC2cConnectionOptions := vmwareService.NewUpdateDirectorSitesVcdaC2cConnectionOptions(
                      		"site_id",
                      		"connection_id",
                      		"Text of the note...",
                      	)
                      	updateDirectorSitesVcdaC2cConnectionOptions.SetAcceptLanguage("en-us")
                      	updateDirectorSitesVcdaC2cConnectionOptions.SetXGlobalTransactionID("transaction1")

                      	updatedVcdaC2c, response, err := vmwareService.UpdateDirectorSitesVcdaC2cConnection(updateDirectorSitesVcdaC2cConnectionOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(updatedVcdaC2c, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedVcdaC2c'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "401":
          description: Unauthorized_Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
  /director_sites/{site_id}/oidc_configuration:
    parameters:
      - $ref: "#/components/parameters/accept_language"
      - $ref: "#/components/parameters/siteId"
    get:
      operationId: get_oidc_configuration
      summary: Get an OIDC configuration
      description: Return the details of an OpenID Connect (OIDC) configuration on a Cloud Director site.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.view
      x-ibm-events:
        events:
          - name: vmware.directorsite-iam.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/oidc_configuration' \
                        -H 'Authorization: Bearer <IAM_token>' \
                        -H 'Content-Type: application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	getOidcConfigurationOptions := vmwareService.NewGetOidcConfigurationOptions(
                      		"site_id",
                      	)
                      	getOidcConfigurationOptions.SetAcceptLanguage("en-us")

                      	oidc, response, err := vmwareService.GetOidcConfiguration(getOidcConfigurationOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(oidc, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        '200':
          $ref: '#/components/responses/GetOIDC'
        '400':
          $ref: '#/components/responses/400'
        '423':
          $ref: '#/components/responses/423'
      tags:
        - Director Site
      x-openapi-router-controller: app.api.v1.sites
    put:
      # parameters:
      #   - $ref: '#/components/parameters/put_content_length'
      operationId: set_oidc_configuration
      summary: Set an OIDC configuration
      description: Request to configure OpenID Connect (OIDC) on a Cloud Director site.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.account
      x-ibm-events:
        events:
          - name: vmware.directorsite-iam.config
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X PUT \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/oidc_configuration' \
                        -H 'Authorization: Bearer <IAM_token>' \
                        -H 'Content-Type: application/json' \
                        -H 'Content-Length: 0'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	setOidcConfigurationOptions := vmwareService.NewSetOidcConfigurationOptions(
                      		"site_id",
                            int64(0),
                      	)
                      	setOidcConfigurationOptions.SetAcceptLanguage("en-us")

                      	oidc, response, err := vmwareService.SetOidcConfiguration(setOidcConfigurationOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(oidc, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        '202':
          $ref: '#/components/responses/SetOIDC'
        '403':
          $ref: '#/components/responses/403'
        '400':
          $ref: '#/components/responses/400'
        '409':
          $ref: '#/components/responses/409'
        '423':
          $ref: '#/components/responses/423'
      tags:
        - Director Site
      x-openapi-router-controller: app.api.v1.sites
  /director_sites/{site_id}/pvdcs:
    parameters:
      - $ref: "#/components/parameters/siteId"
      - $ref: "#/components/parameters/accept_language"
      - $ref: "#/components/parameters/x-global-transaction-id"
    get:
      tags:
        - Director Site
      summary: List the resource pools in a Cloud Director site instance
      description: List the resource pools in a specified Cloud Director site.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.view
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: list_director_sites_pvdcs
      parameters:
        - $ref: "#/components/parameters/accept_language"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/pvdcs' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	listDirectorSitesPvdcsOptions := vmwareService.NewListDirectorSitesPvdcsOptions(
                      		"site_id",
                      	)
                      	listDirectorSitesPvdcsOptions.SetAcceptLanguage("en-us")
                      	listDirectorSitesPvdcsOptions.SetXGlobalTransactionID("transaction1")

                      	pvdcCollection, response, err := vmwareService.ListDirectorSitesPvdcs(listDirectorSitesPvdcsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(pvdcCollection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PVDCCollection"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
    post:
      tags:
        - Director Site
      summary: Create a resource pool instance in a specified Cloud Director site
      description: Create an instance of a resource pool with specified configurations. The Cloud Director site instance is the infrastructure and associated VMware software stack, which consists of VMware vCenter Server, VMware NSX-T, and VMware Cloud Director. VMware platform management and operations are performed with Cloud Director. The minimum initial order size is 2 hosts (2-Socket 32 Cores, 192 GB RAM) with 24 TB of 2.0 IOPS/GB storage.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.create
      x-ibm-events:
        events:
          - name: vmware.directorsite-pvdc.create
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: create_director_sites_pvdcs
      parameters:
        - $ref: "#/components/parameters/accept_language"
        - $ref: "#/components/parameters/x-global-transaction-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PVDCPrototype"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X POST \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/pvdcs' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json' \
                        -d '{
                          "name": "pvdc-1",
                          "data_center_name": "dal10",
                          "clusters": [
                            {
                              "name": "cluster_1",
                              "host_count": 3,
                              "file_shares": {
                                "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
                                "STORAGE_TWO_IOPS_GB": 24000,
                                "STORAGE_FOUR_IOPS_GB": 24000,
                                "STORAGE_TEN_IOPS_GB": 8000
                                },
                              "host_profile": "BM_2S_20_CORES_192_GB"
                              }
                            ]
                          }'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/go-sdk-core/v5/core"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	fileSharesPrototypeModel := &vmwarev1.FileSharesPrototype{}

                      	clusterPrototypeModel := &vmwarev1.ClusterPrototype{
                      		Name:        core.StringPtr("cluster_1"),
                      		HostCount:   core.Int64Ptr(int64(2)),
                      		HostProfile: core.StringPtr("BM_2S_20_CORES_192_GB"),
                      		FileShares:  fileSharesPrototypeModel,
                      	}

                      	createDirectorSitesPvdcsOptions := vmwareService.NewCreateDirectorSitesPvdcsOptions(
                      		"site_id",
                      		"pvdc-1",
                      		"dal10",
                      		[]vmwarev1.ClusterPrototype{*clusterPrototypeModel},
                      	)
                      	createDirectorSitesPvdcsOptions.SetAcceptLanguage("en-us")
                      	createDirectorSitesPvdcsOptions.SetXGlobalTransactionID("transaction1")

                      	pvdc, response, err := vmwareService.CreateDirectorSitesPvdcs(createDirectorSitesPvdcsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(pvdc, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PVDC"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"

  /director_sites/{site_id}/pvdcs/{id}:
    parameters:
      - $ref: "#/components/parameters/siteId"
      - $ref: "#/components/parameters/pvdcIdUnqualified"
      - $ref: "#/components/parameters/accept_language"
      - $ref: "#/components/parameters/x-global-transaction-id"
    get:
      tags:
        - Director Site
      summary: Get the specified resource pool in a Cloud Director site instance
      description: Get the specified resource pools in a specified Cloud Director site.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.view
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: get_director_sites_pvdcs
      parameters:
        - $ref: "#/components/parameters/accept_language"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/pvdcs/<pvdc-id>' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/go-sdk-core/v5/core"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	getDirectorSitesPvdcsOptions := vmwareService.NewGetDirectorSitesPvdcsOptions(
                      		"site_id",
                      		"pvdc_id",
                      	)
                      	getDirectorSitesPvdcsOptions.SetAcceptLanguage("en-us")
                      	getDirectorSitesPvdcsOptions.SetXGlobalTransactionID("transaction1")

                      	pvdc, response, err := vmwareService.GetDirectorSitesPvdcs(getDirectorSitesPvdcsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(pvdc, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PVDC"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"

  /director_sites/{site_id}/pvdcs/{pvdc_id}/clusters:
    parameters:
      - $ref: "#/components/parameters/siteId"
      - $ref: "#/components/parameters/pvdcId"
      - $ref: "#/components/parameters/accept_language"
      - $ref: "#/components/parameters/x-global-transaction-id"
    get:
      tags:
        - Director Site
      summary: List clusters
      description: List all VMware clusters of a Cloud Director site instance by specifying the instance ID.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.view
      x-openapi-router-controller: app.api.v1.cluster
      operationId: list_director_sites_pvdcs_clusters
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/pvdcs/<pvdc_id>/clusters' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	listDirectorSitesPvdcsClustersOptions := vmwareService.NewListDirectorSitesPvdcsClustersOptions(
                      		"site_id",
                      		"pvdc_id",
                      	)
                      	listDirectorSitesPvdcsClustersOptions.SetAcceptLanguage("en-us")
                      	listDirectorSitesPvdcsClustersOptions.SetXGlobalTransactionID("transaction1")

                      	clusterCollection, response, err := vmwareService.ListDirectorSitesPvdcsClusters(listDirectorSitesPvdcsClustersOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(clusterCollection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterCollection"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
    post:
      tags:
        - Director Site
      summary: Create a cluster
      description: Create a VMware cluster under a specified resource pool in a Cloud Director site instance.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.create
      x-ibm-events:
        events:
          - name: vmware.directorsite-cluster.create
      x-openapi-router-controller: app.api.v1.cluster
      operationId: create_director_sites_pvdcs_clusters
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPrototype'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X POST \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/pvdcs/<pvdc_id>/clusters' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json' \
                        -d '{
                          "name": "cluster_1",
                          "host_count": 3,
                          "file_shares": {
                            "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
                            "STORAGE_TWO_IOPS_GB": 24000,
                            "STORAGE_FOUR_IOPS_GB": 24000,
                            "STORAGE_TEN_IOPS_GB": 8000
                            },
                          "host_profile": "BM_2S_20_CORES_192_GB"
                          }'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	fileSharesPrototypeModel := &vmwarev1.FileSharesPrototype{}

                      	createDirectorSitesPvdcsClustersOptions := vmwareService.NewCreateDirectorSitesPvdcsClustersOptions(
                      		"site_id",
                      		"pvdc_id",
                      		"cluster_1",
                      		int64(2),
                      		"BM_2S_20_CORES_192_GB",
                      		fileSharesPrototypeModel,
                      	)
                      	createDirectorSitesPvdcsClustersOptions.SetAcceptLanguage("en-us")
                      	createDirectorSitesPvdcsClustersOptions.SetXGlobalTransactionID("transaction1")

                      	cluster, response, err := vmwareService.CreateDirectorSitesPvdcsClusters(createDirectorSitesPvdcsClustersOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(cluster, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        "401":
          description: Unauthorized_Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'

  /director_sites/{site_id}/pvdcs/{pvdc_id}/clusters/{id}:
    parameters:
      - $ref: "#/components/parameters/siteId"
      - $ref: "#/components/parameters/clusterIdUnqualified"
      - $ref: "#/components/parameters/pvdcId"
      - $ref: "#/components/parameters/accept_language"
      - $ref: "#/components/parameters/x-global-transaction-id"
    get:
      tags:
        - Director Site
      summary: Get a cluster
      description: Get a specific VMware cluster from the resource pool in a Cloud Director site instance.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.view
      x-openapi-router-controller: app.api.v1.cluster
      operationId: get_director_instances_pvdcs_cluster
      parameters:
        - $ref: "#/components/parameters/accept_language"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/pvdcs/{pvdc_id}/clusters/<cluster_id>' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	getDirectorInstancesPvdcsClusterOptions := vmwareService.NewGetDirectorInstancesPvdcsClusterOptions(
                      		"site_id",
                      		"cluster_id",
                      		"pvdc_id",
                      	)
                      	getDirectorInstancesPvdcsClusterOptions.SetAcceptLanguage("en-us")
                      	getDirectorInstancesPvdcsClusterOptions.SetXGlobalTransactionID("transaction1")

                      	cluster, response, err := vmwareService.GetDirectorInstancesPvdcsCluster(getDirectorInstancesPvdcsClusterOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(cluster, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
    delete:
      tags:
        - Director Site
      summary: Delete a cluster
      description: Delete a cluster from a resource pool in a Cloud Director site instance by specifying the instance ID.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.delete
      x-ibm-events:
        events:
          - name: vmware.directorsite-cluster.delete
      x-openapi-router-controller: app.api.v1.workload_domain
      operationId: delete_director_sites_pvdcs_cluster
      parameters:
        - $ref: "#/components/parameters/accept_language"
        - $ref: "#/components/parameters/x-global-transaction-id"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X DELETE \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/pvdcs/<pvdc_id>/clusters/<cluster_id>' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	deleteDirectorSitesPvdcsClusterOptions := vmwareService.NewDeleteDirectorSitesPvdcsClusterOptions(
                      		"site_id",
                      		"cluster_id",
                      		"pvdc_id",
                      	)
                      	deleteDirectorSitesPvdcsClusterOptions.SetAcceptLanguage("en-us")
                      	deleteDirectorSitesPvdcsClusterOptions.SetXGlobalTransactionID("transaction1")

                      	clusterSummary, response, err := vmwareService.DeleteDirectorSitesPvdcsCluster(deleteDirectorSitesPvdcsClusterOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(clusterSummary, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterSummary"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
    patch:
      tags:
        - Director Site
      summary: Update a cluster
      description: Update the number of hosts or file storage shares of a specific cluster in a specific Cloud Director site instance. VMware clusters must have between [2-25] hosts.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.update
      x-ibm-events:
        description: The event that is generated depends on whether the `count` passed in the request is larger than the existing number of hosts.
        events:
          - name: vmware.directorsite-host.add
            description: Generated if `count` is larger than existing number of hosts.
          - name: vmware.directorsite-host.remove
            description: Generated if `count` is less than existing number of hosts.
          - name: vmware.directorsite-nfs-storage.add
            description: Generated if the storage size that is passed in the request is larger than the current storage size.
          - name: vmware.directorsite-nfs-storage.remove
            description: Generated if the storage size that is passed in the request is smaller than the current storage size.
      x-openapi-router-controller: app.api.v1.cluster
      operationId: update_director_sites_pvdcs_cluster
      parameters:
        - $ref: "#/components/parameters/accept_language"
        - $ref: "#/components/parameters/x-global-transaction-id"
      x-codegen-request-body-name: body
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/ClusterPatch"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request for update host count
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X PATCH \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/pvdcs/<pvdc_id>/clusters/<cluster_id>' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json' \
                        -d '{
                          "host_count": 2
                          }'
            - name: Example request for update file shares
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X PATCH \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/<site_id>/pvdcs/<pvdc_id>/clusters/<cluster_id>' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json' \
                        -d '{
                          "file_shares": {
                            "STORAGE_TWO_IOPS_GB": 24000,
                            "STORAGE_FOUR_IOPS_GB": 48000,
                            "STORAGE_TEN_IOPS_GB": 72000
                            }
                          }'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	clusterPatchModel := &vmwarev1.ClusterPatch{}
                      	clusterPatchModelAsPatch, asPatchErr := clusterPatchModel.AsPatch()

                      	updateDirectorSitesPvdcsClusterOptions := vmwareService.NewUpdateDirectorSitesPvdcsClusterOptions(
                      		"site_id",
                      		"cluster_id",
                      		"pvdc_id",
                      		clusterPatchModelAsPatch,
                      	)
                      	updateDirectorSitesPvdcsClusterOptions.SetAcceptLanguage("en-us")
                      	updateDirectorSitesPvdcsClusterOptions.SetXGlobalTransactionID("transaction1")

                      	updateCluster, response, err := vmwareService.UpdateDirectorSitesPvdcsCluster(updateDirectorSitesPvdcsClusterOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(updateCluster, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCluster"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"

  /director_site_regions:
    get:
      tags:
        - Director Site
      summary: List regions
      description: List all IBM Cloud regions enabled for users to create a new Cloud Director site instance.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.view
      x-openapi-router-controller: app.api.v1.regions
      operationId: list_director_site_regions
      parameters:
        - $ref: "#/components/parameters/accept_language"
        - $ref: "#/components/parameters/x-global-transaction-id"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_site_regions' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	listDirectorSiteRegionsOptions := vmwareService.NewListDirectorSiteRegionsOptions()
                      	listDirectorSiteRegionsOptions.SetAcceptLanguage("en-us")
                      	listDirectorSiteRegionsOptions.SetXGlobalTransactionID("transaction1")

                      	directorSiteRegionCollection, response, err := vmwareService.ListDirectorSiteRegions(listDirectorSiteRegionsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(directorSiteRegionCollection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: Enabled regions found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectorSiteRegionCollection"

  /multitenant_director_sites:
    get:
      tags:
        - Director Site
      summary: Get all multitenant Cloud Director sites
      description: Retrieve a collection of multitenant Cloud Director sites.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.view
      x-openapi-router-controller: app.api.v1.regions
      operationId: list_multitenant_director_sites
      parameters:
        - $ref: '#/components/parameters/accept_language'
        - $ref: '#/components/parameters/x-global-transaction-id'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/multitenant_director_sites' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	listMultitenantDirectorSitesOptions := vmwareService.NewListMultitenantDirectorSitesOptions()
                      	listMultitenantDirectorSitesOptions.SetAcceptLanguage("en-us")
                      	listMultitenantDirectorSitesOptions.SetXGlobalTransactionID("transaction1")

                      	multitenantDirectorSiteCollection, response, err := vmwareService.ListMultitenantDirectorSites(listMultitenantDirectorSitesOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(multitenantDirectorSiteCollection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: Multitenant Cloud Director sites found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultitenantDirectorSiteCollection'

  /director_site_host_profiles:
    get:
      tags:
        - Director Site
      summary: List host profiles
      description: List available host profiles that can be used when you create a Cloud Director site instance. IBM Cloud offers several different host types. Typically, the host type is selected based on the properties of the workload to be run in the VMware cluster.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.infrastructure.view
      x-openapi-router-controller: app.api.v1.host_profiles
      operationId: list_director_site_host_profiles
      parameters:
        - $ref: "#/components/parameters/accept_language"
        - $ref: "#/components/parameters/x-global-transaction-id"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/director_site_host_profiles' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	listDirectorSiteHostProfilesOptions := vmwareService.NewListDirectorSiteHostProfilesOptions()
                      	listDirectorSiteHostProfilesOptions.SetAcceptLanguage("en-us")
                      	listDirectorSiteHostProfilesOptions.SetXGlobalTransactionID("transaction1")

                      	directorSiteHostProfileCollection, response, err := vmwareService.ListDirectorSiteHostProfiles(listDirectorSiteHostProfilesOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(directorSiteHostProfileCollection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          description: Host profiles found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectorSiteHostProfileCollection"

  /vdcs:
    parameters:
      - $ref: "#/components/parameters/accept_language"
    get:
      operationId: list_vdcs
      summary: List virtual data centers
      description: List all virtual data centers (VDCs) that user has access to in the cloud account.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.view
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	listVdcsOptions := vmwareService.NewListVdcsOptions()
                      	listVdcsOptions.SetAcceptLanguage("en-us")

                      	vdcCollection, response, err := vmwareService.ListVdcs(listVdcsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(vdcCollection, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          $ref: "#/components/responses/VDCCollection"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
      tags:
        - VDC
      x-openapi-router-controller: app.api.v1.vdcs
    post:
      operationId: create_vdc
      summary: Create a virtual data center
      description: Create a virtual data center (VDC) with specified configurations.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.create
      x-ibm-events:
        events:
          - name: vmware.vdc.create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VDCPrototype"
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request (Use quotation marks for URL with parameters)
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X POST \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json' \
                        -d '{
                          "edge": {
                            "size": "medium",
                            "type": "performance"
                            },
                          "name": "sampleVDC",
                          "fast_provisioning_enabled": false,
                          "director_site": {
                            "id": "directorsiteuuid",
                            "pvdc": {
                              "id": "pvdc_uuid"
                              }
                            }
                          }'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/go-sdk-core/v5/core"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	directorSitePvdcModel := &vmwarev1.DirectorSitePVDC{
                      		ID: core.StringPtr("pvdc_id"),
                      	}

                      	vdcDirectorSitePrototypeModel := &vmwarev1.VDCDirectorSitePrototype{
                      		ID:   core.StringPtr("site_id"),
                      		Pvdc: directorSitePvdcModel,
                      	}

                      	createVdcOptions := vmwareService.NewCreateVdcOptions(
                      		"sampleVDC",
                      		vdcDirectorSitePrototypeModel,
                      	)
                      	createVdcOptions.SetAcceptLanguage("en-us")

                      	vdc, response, err := vmwareService.CreateVdc(createVdcOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(vdc, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          $ref: "#/components/responses/CreateVDC"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
      tags:
        - VDC
      x-openapi-router-controller: app.api.v1.vdcs

  /vdcs/{id}:
    parameters:
      - $ref: "#/components/parameters/vdcIdUnqualified"
      - $ref: "#/components/parameters/accept_language"
    get:
      operationId: get_vdc
      summary: Get a virtual data center
      description: Get details about a virtual data center (VDC) by specifying the VDC ID.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.view
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/<vdc_id>' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	getVdcOptions := vmwareService.NewGetVdcOptions(
                      		"vdc_id",
                      	)
                      	getVdcOptions.SetAcceptLanguage("en-us")

                      	vdc, response, err := vmwareService.GetVdc(getVdcOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(vdc, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "200":
          $ref: "#/components/responses/GetVDC"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
      tags:
        - VDC
      x-openapi-router-controller: app.api.v1.vdcs
    delete:
      operationId: delete_vdc
      summary: Delete a virtual data center
      description: Delete a virtual data center (VDC) by specifying the VDC ID.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.delete
      x-ibm-events:
        events:
          - name: vmware.vdc.delete
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X DELETE \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/<vdc_id>' \
                        -H 'authorization: Bearer <IAM_token>' \
                        -H 'Content-Type:application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	deleteVdcOptions := vmwareService.NewDeleteVdcOptions(
                      		"vdc_id",
                      	)
                      	deleteVdcOptions.SetAcceptLanguage("en-us")

                      	vdc, response, err := vmwareService.DeleteVdc(deleteVdcOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(vdc, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        "202":
          $ref: "#/components/responses/DeleteVDC"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
      tags:
        - VDC
      x-openapi-router-controller: app.api.v1.vdcs
    patch:
      operationId: update_vdc
      summary: Update a virtual data center
      description: Update a virtual data center with the specified ID.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.update
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/VDCPatch'
        required: true
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X PATCH \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/<vdc_id>' \
                        -H 'Authorization: Bearer <IAM_token>' \
                        -H 'Content-Type: application/json' \
                        -d '{
                          "fast_provisioning_enabled": true
                          }'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	vdcPatchModel := &vmwarev1.VDCPatch{}
                      	vdcPatchModelAsPatch, asPatchErr := vdcPatchModel.AsPatch()

                      	updateVdcOptions := vmwareService.NewUpdateVdcOptions(
                      		"vdc_id",
                      		vdcPatchModelAsPatch,
                      	)
                      	updateVdcOptions.SetAcceptLanguage("en-us")

                      	vdc, response, err := vmwareService.UpdateVdc(updateVdcOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(vdc, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        '202':
          $ref: '#/components/responses/UpdateVDC'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '423':
          $ref: '#/components/responses/423'
      tags:
        - VDC
      x-openapi-router-controller: app.api.v1.vdcs

  /vdcs/{vdc_id}/edges/{edge_id}/transit_gateways/{id}:
    parameters:
      - $ref: '#/components/parameters/vdcId'
      - $ref: '#/components/parameters/edgeId'
      - $ref: '#/components/parameters/transitGatewayIdUnqualified'
      - $ref: '#/components/parameters/accept_language'
    put:
      # parameters:
      #   - $ref: '#/components/parameters/put_content_length'
      operationId: add_transit_gateway_connections
      summary: Add IBM Transit Gateway connections to edge
      description: Add IBM Transit Gateway connections to an edge and virtual data center.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransitGatewayRegion'
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.update
      x-ibm-events:
        events:
          - name: vmware.vdc.update
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request where the IBM Transit Gateway is deployed in the same region as the Cloud Director site where the virtual data center is deployed
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X PUT \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/<vdc_id>/edges/<edge_id>/transit_gateways/<transit_gateway_id>' \
                        -H 'Authorization: Bearer <IAM_token>' \
                        -H 'Content-Type: application/json' \
                        -H 'Content-Length: 0'
            - name: Example request where the IBM Transit Gateway is deployed in a different region than the Cloud Director site where the VDC is deployed
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X PUT \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/<vdc_id>/edges/<edge_id>/transit_gateways/<transit_gateway_id>' \
                        -H 'Authorization: Bearer <IAM_token>' \
                        -H 'Content-Type: application/json' \
                        -d '{
                          "region": "jp-tok"
                        }'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	addTransitGatewayConnectionsOptions := vmwareService.NewAddTransitGatewayConnectionsOptions(
                      		"vdc_id",
                      		"edge_id",
                      		"transit_gateway_id",
                            int64(0),
                      	)
                      	addTransitGatewayConnectionsOptions.SetAcceptLanguage("en-us")

                      	transitGateway, response, err := vmwareService.AddTransitGatewayConnections(addTransitGatewayConnectionsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(transitGateway, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        '202':
          $ref: '#/components/responses/AddTransitGatewayConnections'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - VDC
      x-openapi-router-controller: app.api.v1.vdcs
    delete:
      operationId: remove_transit_gateway_connections
      summary: Remove IBM Transit Gateway connections from edge
      description: Remove IBM Transit Gateway connections from an edge and virtual data center.
      x-ibm-permissions:
        actions:
          - name: vmware.directorsite.director.update
      x-ibm-events:
        events:
          - name: vmware.vdc.update
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X DELETE \
                        'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/<vdc_id>/edges/<edge_id>/transit_gateways/<transit_gateway_id>' \
                        -H 'Authorization: Bearer <IAM_token>' \
                        -H 'Content-Type: application/json'
          go:
            - name: Example request
              example:
                - type: code
                  lang: go
                  source:
                    - |-
                      package main

                      import (
                      	"encoding/json"
                      	"fmt"
                      	"github.com/IBM/vmware-go-sdk/vmwarev1"
                      )

                      var (
                      	vmwareService *vmwarev1.VmwareV1
                      )

                      func main() {
                      	removeTransitGatewayConnectionsOptions := vmwareService.NewRemoveTransitGatewayConnectionsOptions(
                      		"vdc_id",
                      		"edge_id",
                      		"transit_gateway_id",
                      	)
                      	removeTransitGatewayConnectionsOptions.SetAcceptLanguage("en-us")

                      	transitGateway, response, err := vmwareService.RemoveTransitGatewayConnections(removeTransitGatewayConnectionsOptions)
                      	if err != nil {
                      		panic(err)
                      	}
                      	b, _ := json.MarshalIndent(transitGateway, "", "  ")
                      	fmt.Println(string(b))
                      	fmt.Println(response)
                      }
      responses:
        '202':
          $ref: '#/components/responses/RemoveTransitGatewayConnections'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      tags:
        - VDC
      x-openapi-router-controller: app.api.v1.vdcs

  /vdcs/{vdc_id}/edges/{edge_id}/swap_primary_and_secondary_network_locations:
      parameters:
        - $ref: '#/components/parameters/vdcId'
        - $ref: '#/components/parameters/edgeId'
        - $ref: '#/components/parameters/accept_language'
      patch:
        operationId: swap_ha_edge_sites
        summary: Swap primary and secondary locations for network regional HA edges
        description: Swap the primary and secondary locations for network regional high availability (HA) edges.
        x-ibm-permissions:
          actions:
            - name: vmware.directorsite.director.update
        x-ibm-events:
          events:
            - name: vmware.vdc.update
        x-sdk-operations:
          request-examples:
            curl:
              - name: Example request to support switching the edge's primary and secondary network locations
                example:
                  - type: code
                    lang: curl
                    source:
                      - >-
                        curl -X PATCH \
                          'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/<vdc_id>/edges/<edge_id>/swap_primary_and_secondary_network_locations' \
                          -H 'Authorization: Bearer <IAM_token>'
            go:
              - name: Example request
                example:
                  - type: code
                    lang: go
                    source:
                      - |-
                        package main
  
                        import (
                          "encoding/json"
                          "fmt"
                          "github.com/IBM/vmware-go-sdk/vmwarev1"
                        )
  
                        var (
                          vmwareService *vmwarev1.VmwareV1
                        )
  
                        func main() {
                          swapHaEdgePrimaryAndSecondarySiteOptions := vmwareService.NewSwapHaEdgePrimaryAndSecondarySiteOptions(
                              "vdc_id",
                              "edge_id"
                          )
                          swapHaEdgePrimaryAndSecondarySiteOptions.SetAcceptLanguage("en-us")
  
                          swapHaEdgeSite, response, err := vmwareService.SwapHaEdgePrimaryAndSecondarySite(swapHaEdgePrimaryAndSecondarySiteOptions)
                          if err != nil {
                              panic(err)
                          }
                          b, _ := json.MarshalIndent(swapHaEdgeSite, "", "  ")
                          fmt.Println(string(b))
                          fmt.Println(response)
                        }
        responses:
          '202':
            $ref: '#/components/responses/SwapEdgeNetworkLocations'
          '400':
            $ref: '#/components/responses/400'
          '401':
            $ref: '#/components/responses/401'
          '403':
            $ref: '#/components/responses/403'
          '404':
            $ref: '#/components/responses/404'
        tags:
          - VDC
        x-openapi-router-controller: app.api.v1.vdcs

  /usage_meter_registrations:
    get:
      summary: List Usage Meter registrations
      description: List all your Usage Meter registrations.
      tags:
        - Usage Meter Registrations
      x-ibm-permissions:
        actions:
          - name: vmware.usage-meter.read
      x-ibm-events:
        events:
          - name: vmware.usage-meter.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://licensing.vmware.cloud.ibm.com/v1/usage_meter_registrations' \
                        -H 'Authorization: Bearer <IAM_TOKEN>'
      x-openapi-router-controller: app.api.v1.usage_meter_registrations
      operationId: list_usage_meter_registrations
      responses:
        "200":
          description: The collection of Usage Meter registrations was returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageMeterRegistrationCollection"
              examples:
                Default:
                  $ref: "#/components/examples/UsageMeterRegistrationCollection"
    post:
      summary: Create a Usage Meter registration
      description: Register your Usage Meter to start reporting usage.
      tags:
        - Usage Meter Registrations
      x-ibm-permissions:
        actions:
          - name: vmware.usage-meter.write
      x-ibm-events:
        events:
          - name: vmware.usage-meter.create
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X POST \
                        'https://licensing.vmware.cloud.ibm.com/v1/usage_meter_registrations' \
                        -H 'Authorization: Bearer <IAM_TOKEN>' \
                        -H 'Content-Type: application/json' \
                        -d '{
                        "name": "string",
                        "usage_meter": {
                          "id": "4242b01d-2db2-4d7b-ad5d-0792c61295a8"
                        }
                      }'
      x-openapi-router-controller: app.api.v1.usage_meter_registrations
      operationId: create_usage_meter_registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsageMeterRegistrationPrototype"
            examples:
              Default:
                $ref: "#/components/examples/UsageMeterRegistrationPrototype"
      responses:
        "201":
          description: The Usage Meter registration was created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageMeterRegistration"
              examples:
                Default:
                  $ref: "#/components/examples/UsageMeterRegistration"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "503":
          $ref: "#/components/responses/503"
  /usage_meter_registrations/{id}:
    parameters:
      - $ref: "#/components/parameters/UsageMeterRegistrationID"
    get:
      summary: Get a Usage Meter registration
      description: Get a Usage Meter registration.
      tags:
        - Usage Meter Registrations
      security:
        - bearerAuth: []
      x-ibm-permissions:
        actions:
          - name: vmware.usage-meter.read
      x-ibm-events:
        events:
          - name: vmware.usage-meter.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://licensing.vmware.cloud.ibm.com/v1/usage_meter_registrations/<id>' \
                        -H 'Authorization: Bearer <IAM_TOKEN>'
      x-openapi-router-controller: app.api.v1.usage_meter_registrations
      operationId: get_usage_meter_registration
      responses:
        "200":
          description: The Usage Meter registration was returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageMeterRegistration"
              examples:
                Default:
                  $ref: "#/components/examples/UsageMeterRegistration"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
    delete:
      summary: Delete a Usage Meter registration
      description: Unregister your Usage Meter to stop reporting usage.
      tags:
        - Usage Meter Registrations
      x-ibm-permissions:
        actions:
          - name: vmware.usage-meter.write
      x-ibm-events:
        events:
          - name: vmware.usage-meter.delete
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X DELETE \
                        'https://licensing.vmware.cloud.ibm.com/v1/usage_meter_registrations/<id>' \
                        -H 'Authorization: Bearer <IAM_TOKEN>'
      x-openapi-router-controller: app.api.v1.usage_meter_registrations
      operationId: delete_usage_meter_registration
      responses:
        "204":
          description: The Usage Meter registration was deleted.
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "503":
          $ref: "#/components/responses/503"

  /licenses:
    get:
      summary: List VMware licenses
      description: List the VMware licenses provided by IBM if you are entitled to them.
      tags:
        - Licenses
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  lang: curl
                  source:
                    - >-
                      curl -X GET \
                        'https://licensing.vmware.cloud.ibm.com/v1/licenses' \
                        -H 'Authorization: Bearer <IAM_TOKEN>'
      x-openapi-router-controller: app.api.v1.license_info
      operationId: list_licenses
      responses:
        "200":
          description: The collection of VMware licenses was returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LicenseCollection"
              example:
                {
                  "licenses":
                    [
                      {
                        "license_keys":
                          [
                            {
                              "value": "XXXXX-XXXXX-XXXXX-XXXXX-XXXXX",
                              "name": "VMware NSX 4 Networking",
                            },
                          ],
                        "version": "8",
                      },
                      {
                        "license_keys":
                          [
                            {
                              "value": "YYYYY-YYYYY-YYYYY-YYYYY-YYYYY",
                              "name": "VMware vSphere 8 Enterprise Plus for VCF",
                            },
                            {
                              "value": "ZZZZZ-ZZZZZ-ZZZZZ-ZZZZZ-ZZZZZ",
                              "name": "VMware vSAN 8 for Foundation (Supports vCenter Server 8.0.0a and later)",
                            },
                          ],
                        "version": "8.0u2b",
                      },
                    ],
                }
        "401":
          $ref: "#/components/responses/401"
components:
  parameters:
    siteIdUnqualified:
      in: path
      name: id
      description: A unique ID for the Cloud Director site in which the virtual data center was created.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 128
        pattern: ^[A-Za-z0-9_-]{1,128}$
      example: 'site_id'
    siteId:
      in: path
      name: site_id
      description: A unique ID for the Cloud Director site in which the virtual data center was created.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 128
        pattern: ^[A-Za-z0-9_-]{1,128}$
      example: 'site_id'
    connectionIdUnqualified:
      in: path
      name: id
      description: A unique ID for the cloud-to-cloud connections in the relationship Cloud Director site.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 64
        pattern: '^[-0-9a-z_]+$'
        example: "connection_id"
    vcdaConnectionsIdUnqualified:
      in: path
      name: id
      description: A unique ID for the VCDA connections in the relationship Cloud Director site.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 64
        pattern: '^[-0-9a-z_]+$'
        example: "vcda_connections_id"
    pvdcIdUnqualified:
      in: path
      name: id
      description: A unique ID for the resource pool in a Cloud Director site.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 128
        pattern: ^[A-Za-z0-9_-]{1,128}$
      example: 'pvdc_id'
    pvdcId:
      in: path
      name: pvdc_id
      description: A unique ID for the resource pool in a Cloud Director site.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 128
        pattern: ^[A-Za-z0-9_-]{1,128}$
      example: 'pvdc_id'
    clusterIdUnqualified:
      in: path
      name: id
      description: The cluster to query.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 128
        pattern: ^[A-Za-z0-9_-]{1,128}$
      example: 'cluster_id'
    x-global-transaction-id:
      in: header
      name: X-Global-Transaction-ID
      description: Transaction ID.
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 128
        pattern: ^[A-Za-z0-9_-]{1,128}$
      example: 'transaction1'
    vdcIdUnqualified:
      name: id
      description: A unique ID for a specified virtual data center.
      in: path
      required: true
      schema:
        type: string
        pattern: ^[A-Za-z0-9_-]{1,128}$
        minLength: 1
        maxLength: 128
        example: 'vdc_id'
    vdcId:
      name: vdc_id
      description: A unique ID for a virtual data center.
      in: path
      required: true
      schema:
        type: string
        pattern: ^[A-Za-z0-9_-]{1,128}$
        minLength: 1
        maxLength: 128
        example: 'vdc_id'
    query_site_id:
      name: site_id
      description: A unique ID for the Cloud Director site.
      in: query
      required: true
      schema:
        type: string
        pattern: ^[A-Za-z0-9_-]{1,128}$
        minLength: 1
        maxLength: 128
    edgeId:
      name: edge_id
      description: A unique ID for an edge.
      in: path
      required: true
      schema:
        type: string
        pattern: ^[A-Za-z0-9_-]{1,128}$
        minLength: 1
        maxLength: 128
        example: "edge_id"
    transitGatewayIdUnqualified:
      name: id
      description: A unique ID for an IBM Transit Gateway.
      in: path
      required: true
      schema:
        type: string
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        minLength: 36
        maxLength: 36
        example: "transit_gateway_id"
    accept_language:
      in: header
      name: Accept-Language
      description: Language.
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 256
        pattern: ^[A-Za-z0-9-,;=\.\*\s]{1,256}$
      example: 'en-us'
    put_content_length:
      in: header
      name: Content-Length
      description: Size of the message body in bytes.
      required: true
      schema:
        type: integer
        minimum: 0
        maximum: 0
        enum:
          - 0
      example: 0
    UsageMeterRegistrationID:
      description: Identifier for a Usage Meter registration.
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/UniversallyUniqueID"

  schemas:
    UnauthorizedResponse:
      description: Authentication information is missing or is not valid.
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 256
          description: "errors"
          items:
            $ref: "#/components/schemas/ErrorDetail"
        status_code:
          minimum: 100
          maximum: 600
          type: integer
          description: HTTP status code.
          example: 401
        trace:
          type: string
          description: Unique ID value to trace the error.
      example:
        {
          "trace": "trace id",
          "status_code": 401,
          "errors":
            [
              {
                "code": "m055_cannot_update_status_director_site",
                "message": "Invalid Token was provided.",
              },
            ],
        }
    PVDCBasicInfo:
      description: VMware resource pool basic information.
      type: object
      required:
        - name
        - data_center_name
      properties:
        name:
          type: string
          pattern: "^[a-zA-Z][A-Za-z0-9_-]{0,49}$"
          description: Name of the resource pool. Resource pool names must be unique per Cloud Director site instance and they cannot be changed after creation.
          minLength: 1
          maxLength: 50
          example: 'pvdc-1'
        data_center_name:
          type: string
          description: Data center location to deploy the cluster. See `GET /director_site_regions` for supported data center locations.
          minLength: 1
          maxLength: 25
          pattern: '^[0-9a-zA-Z-\_]{1,25}$'
          example: 'dal10'
    DirectorSitePrototype:
      description: "Create VMware Cloud Director site request body"
      type: object
      required:
        - name
        - pvdcs
      properties:
        name:
          type: string
          pattern: "^[a-zA-Z][A-Za-z0-9_-]{0,49}$"
          description: Name of the Cloud Director site instance. Use a name that is unique to your region and meaningful. Names cannot be changed after initial creation.
          minLength: 1
          maxLength: 256
          example: 'my_director_site'
        resource_group:
          $ref: "#/components/schemas/ResourceGroupIdentity"
        pvdcs:
          type: array
          description: List of VMware resource pools to deploy on the instance.
          minItems: 1
          maxItems: 16
          items:
            $ref: "#/components/schemas/PVDCPrototype"
        services:
          type: array
          minItems: 1
          maxItems: 25
          description: List of services to deploy on the instance.
          items:
            $ref: '#/components/schemas/ServiceIdentity'
        private_only:
          type: boolean
          description: Indicates whether the site is private only.
        console_connection_type:
          type: string
          description: Type of console connection.
          enum:
            - 'private'
            - 'public'
        ip_allow_list:
          type: array
          minLength: 0
          maxLength: 256
          description: List of allowed IP addresses.
          items:
            type: string
          example: ['1.1.1.1/24', '2.2.2.2/24']
      example:
        {
          "name": "WorkloadDomain_1",
          "private_only": True,
          "console_connection_type": "private",
          "ip_allow_list": ['1.1.1.1/24', '2.2.2.2/24'],
          "resource_group": { "id": "example_resource_group_id" },
          "services": [
            {
              "name": "veeam"
            },
            {
              "name": "vcda"
            }
          ],
          "pvdcs":
            [
              {
                "name": "pvdc-1",
                "data_center_name": "dal10",
                "clusters":
                  [
                    {
                      "name": "cluster_1",
                      "host_count": 3,
                      "file_shares":
                        {
                          "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
                          "STORAGE_TWO_IOPS_GB": 24000,
                          "STORAGE_FOUR_IOPS_GB": 24000,
                          "STORAGE_TEN_IOPS_GB": 8000,
                        },
                      "host_profile": "BM_2S_20_CORES_192_GB",
                    },
                  ],
              },
            ],
        }
    ResourceGroupIdentity:
      description: |
        The resource group to associate with the resource instance.
        If not specified, the default resource group in the account is used.
      type: object
      properties:
        id:
          description: A unique ID for the resource group.
          type: string
          pattern: '^[0-9a-zA-Z-\_]{1,128}$'
          minLength: 1
          maxLength: 128
          example: 'some_resourcegroupid'
      required:
        - id
    ResourceGroupReference:
      description: |
        The resource group information to associate with the resource instance.
      type: object
      properties:
        id:
          description: A unique ID for the resource group.
          type: string
          pattern: '^[0-9a-zA-Z-\_]{1,128}$'
          minLength: 1
          maxLength: 128
        name:
          description: The name of the resource group.
          type: string
          pattern: '^[0-9a-zA-Z-\_]{1,128}$'
          minLength: 1
          maxLength: 128
        crn:
          description: The cloud reference name for the resource group.
          type: string
      required:
        - id
        - name
        - crn
    ServiceIdentity:
      description: "Create Service request body"
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The service name.
          enum:
            - 'veeam'
            - 'vcda'
      example:
        {
          "name": "veeam"
        }
    EnableServicePrototype:
      description: "Enable or Disable service request body"
      type: object
      required:
        - enable
      properties:
        enable:
          type: boolean
          description: Indicates whether it is required to enable or disable a service.
      example:
        {
          "enable": True
        }
    VcdaConnectionPrototype:
      description: "Create VCDA connection request body"
      type: object
      required:
        - type
        - data_center_name
      properties:
        type:
          type: string
          description: Connection type.
          enum:
            - 'private'
            - 'public'
        data_center_name:
          type: string
          description: Where to deploy the cluster.
          minLength: 1
          maxLength: 32
          pattern: '^[a-zA-Z0-9-_ ]+$'
          example: "dal10"
        allow_list:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 32
            pattern: '^[0-9\.]+$'
          minItems: 1
          maxItems: 1
          description: List of IP addresses allowed in the public connection.
          example: ["1.1.1.1"]
      example:
        {
          "name": "Providervdc_1",
          "data_center_name": "dal10",
          "type": "private",
          "allow_list": [
            "1.1.1.1"
          ]
        }
    ServiceEnabled:
      description: "Enable Service response for accepted request"
      properties:
        message:
          type: string
          description: Request status.
          example: 'The request has been accepted.'
      example: {
        "message": "The request has been accepted."
      }
    VcdaConnection:
      description: "Created VCDA connection"
      type: object
      required:
        - type
        - data_center_name
        - id
        - status
        - speed
        - allow_list
      properties:
        id:
          type: string
          description: ID of the VCDA connection on the Cloud Director site.
          minLength: 1
          maxLength: 64
          pattern: '^[-0-9a-z_]+$'
        status:
          type: string
          description: Status of the VCDA connection.
          enum:
            - 'creating'
            - 'ready_to_use'
            - 'deleting'
            - 'deleted'
            - 'updating'
        type:
          type: string
          description: Connection type.
          enum:
            - 'private'
            - 'public'
        speed:
          type: string
          description: Connection speed.
          enum:
            - 'speed_20g'
        data_center_name:
          type: string
          description: Where to deploy the cluster.
          minLength: 1
          maxLength: 32
          pattern: '^[a-zA-Z0-9-_ ]+$'
        allow_list:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
          description: List of IP addresses allowed in the public connection.
      example:
        {
          "name": "Providervdc_1",
          "data_center_name": "dal10",
          "status": "ready_to_use",
          "id": "testx",
          "type": "private",
          "speed": "speed_20g",
          "allow_list": [
            "1.1.1.1"
          ]
        }
    UpdatedVcdaConnection:
      description: "Update private connection"
      properties:
        id:
          type: string
          description: ID of the VCDA connection.
          example: '9165a9a4-cb70-4248-99ce-661106d89b83'
        status:
          type: string
          description: Status of the VCDA connection after accepting the request.
          example: 'updating'
      example: {
        "id": "9165a9a4-cb70-4248-99ce-661106d89b83",
        "status": "updating"
      }
    VcdaC2cPrototype:
      description: "Create VCDA cloud-to-cloud connection request body."
      type: object
      required:
        - local_data_center_name
        - local_site_name
        - peer_site_name
        - peer_region
      properties:
        local_data_center_name:
          type: string
          description: Local data center name.
          minLength: 1
          maxLength: 32
          pattern: '^[a-zA-Z0-9-_ ]+$'
          example: "dal10"
        local_site_name:
          type: string
          description: Local site name.
          example: "ddirw002-gr80d10vcda"
        peer_site_name:
          type: string
          description: Peer site name.
          example: "dirw274t02vcda"
        peer_region:
          type: string
          description: Peer region.
          example: "jp-tok"
        note:
          type: string
          description: Note
          example: "Text of the note..."
      example:
        {
          "local_data_center_name": "dal10",
          "local_site_name": "ddirw002-gr80d10vcda",
          "peer_site_name": "dirw274t02vcda",
          "peer_region": "jp-tok",
          "note": "Text of the note..."
        }
    VcdaC2c:
      description: "Response to create cloud-to-cloud connection."
      type: object
      required:
        - id
        - status
        - peer_offering
        - local_data_center_name
        - local_site_name
        - peer_site_name
        - peer_region
        - note
      properties:
        id:
          type: string
          description: ID of VCDA connection on the workload domain.
          minLength: 1
          maxLength: 64
          pattern: '^[-0-9a-z_]+$'
        status:
          type: string
          description: Status of the VCDA connection.
          enum:
            - 'creating'
            - 'ready_to_use'
            - 'deleting'
            - 'deleted'
            - 'updating'
        peer_offering:
          type: string
          description: The offering name of the peer site, "vmware_aas" or "vmware_shared".
        local_data_center_name:
          type: string
          description: Where to deploy the cluster.
          minLength: 1
          maxLength: 32
          pattern: '^[a-zA-Z0-9-_ ]+$'
          example: "dal10"
        local_site_name:
          type: string
          description: Site name.
        peer_site_name:
          type: string
          description: Peer site name.
        peer_region:
          type: string
          description: Peer region.
        note:
          type: string
          description: Note
      example:
        {
          "id": "4b8d2641-5e1b-48c4-bd03-dd66edc824d7",
          "status": "creating",
          "peer_offering": "gen2",
          "local_data_center_name": "dal10",
          "local_site_name": "ddirw002-gr80d10vcda",
          "peer_site_name": "dirw274t02vcda",
          "peer_region": "jp-tok",
          "note": "Text of the note..."
        }
    VcdaC2cPatch:
      description: "Update VCDA cloud-to-cloud connection note."
      type: object
      required:
        - note
      properties:
        note:
          type: string
          description: Note
          example: "Text of the note..."
      example:
        {
          "note": "New text of the note..."
        }
    UpdatedVcdaC2c:
      description: "Updated VCDA cloud-to-cloud connection note."
      type: object
      required:
        - id
        - note
      properties:
        id:
          type: string
          description: ID of VCDA connection on the workload domain.
          minLength: 1
          maxLength: 64
          pattern: '^[-0-9a-z_]+$'
        note:
          type: string
          description: Note
      example:
        {
          "id": "4b8d2641-5e1b-48c4-bd03-dd66edc824d7",
          "note": "New text of the note..."
        }

    Service:
      description: "Service response body"
      type: object
      required:
        - name
        - id
        - ordered_at
        - status
        - sobrs
        - connections
      properties:
        name:
          type: string
          description: The service name.
          enum:
            - 'veeam'
            - 'vcda'
        id:
          description: A unique ID for the service.
          type: string
          pattern: '^[0-9a-zA-Z-\_]{1,128}$'
          minLength: 1
          maxLength: 128
        ordered_at:
          type: string
          format: date-time
          description: The time that the service instance is ordered.
        provisioned_at:
          type: string
          format: date-time
          description: The time that the service instance is provisioned and available to use.
        status:
          type: string
          description: The service instance status.
          enum:
            - 'creating'
            - 'ready_to_use'
            - 'deleting'
            - 'deleted'
            - 'updating'
        console_url:
          description: Service console URL. This property is applicable when the service name is veeam.
          type: string
          minLength: 1
          maxLength: 128
        replicators:
          type: integer
          description: Replicators for the VCDA instance.
          minimum: 1
          maximum: 25
        connections:
          type: array
          minItems: 1
          maxItems: 25
          description: Connection on a VCDA instance.
          items:
            $ref: '#/components/schemas/VcdaConnection'
        sobrs:
          type: array
          minItems: 1
          maxItems: 25
          description: Scale-out backup repositories created on the Veeam service instance.
          items:
            $ref: '#/components/schemas/sobr'        
      example:
        {
          "name": "veeam",
          "id": "ed5372b9-c67a-4b4d-a43f-3ac01a6e191e",
          "provisioned_at": "2022-12-06T20:06:59.137069+00:00",
          "ordered_at": "2022-12-06T20:06:59.137069+00:00",
          "status": "creating",
          "console_url": "https://sdirw311.jp-tok.vmware.test.cloud.ibm.com:9443/vCloud/1"
        }

    sobr:
      description: "Configuration details of the scale-out backup repository."
      type: object
      required:
        - storage_type
        - type
        - status
      properties:
        id:
          type: string
          description: The ID of the scale-out backup repository.
          minLength: 1
          maxLength: 256
          pattern: '^[0-9a-zA-Z-\_]{1,128}$'
        name:
          type: string
          description: The name of the scale-out backup repository.
          minLength: 1
          maxLength: 256
          pattern: "^[a-zA-Z0-9-]+$"
        size:
          minimum: 200
          maximum: 1200
          type: integer
          description: The size of the scale-out backup repository.
        data_center:
          type: string
          description: The data center location where to create the scale-out backup repository.
          minLength: 1
          maxLength: 256
          pattern: '^[a-zA-Z0-9-_ ]+$'
        immutability_time:
          minimum: 7
          maximum: 30
          type: integer
          description: The immutability time of the backup files stored in the scale-out backup repository.
        storage_type:
          type: string
          description: The type of storage for the scale-out backup repository.
          enum:
            - 'vsan'
            - 'cos'
            - 'hybrid'
        type:
          type: string
          description: The type of scale-out backup repository.
          enum:
            - 'default'
            - 'custom'
        veeam_org_config_id:
          type: string
          description: The ID of the Veeam organization configuration.
          maxLength: 256
          pattern: '^[0-9a-zA-Z-\_]{1,128}$'
        status:
          type: string
          description: The status of the scale-out backup repository on the Veeam service instance.
          enum:
            - 'creating'
            - 'ready_to_use'
            - 'updating'
            - 'deleting'
            - 'deleted'
        created_at:
          type: string
          format: date-time
          description: The date and time when the scale-out backup repository is ordered.
      example:
        {
          "id": "e039e345-16d6-4519-96ca-c6c95f541602",
          "name": "6d258275-d13-wei-hybrid-3",
          "size": 400,
          "data_center": "dal13",
          "status": "ready_to_use",
          "immutability_time": 7,
          "storage_type": "hybrid",
          "type": "custom",
          "veeam_org_config_id": "976f8080-280b-4874-bd27-5f3a60e0c5c4",
          "created_at": "2024-02-22T18:12:10.878203+00:00",
        }
    PVDCPrototype:
      description: VMware resource pool order information.
      allOf:
        - $ref: "#/components/schemas/PVDCBasicInfo"
        - type: object
          required:
            - clusters
          properties:
            clusters:
              type: array
              description: List of VMware clusters to deploy on the instance. Clusters form VMware workload availability boundaries.
              minItems: 1
              maxItems: 1
              items:
                $ref: "#/components/schemas/ClusterPrototype"
      example:
        {
          "name": "pvdc-1",
          "data_center_name": "dal10",
          "clusters":
            [
              {
                "name": "cluster_1",
                "host_count": 3,
                "file_shares":
                  {
                    "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
                    "STORAGE_TWO_IOPS_GB": 24000,
                    "STORAGE_FOUR_IOPS_GB": 24000,
                    "STORAGE_TEN_IOPS_GB": 8000,
                  },
                "host_profile": "BM_2S_20_CORES_192_GB",
              },
            ],
        }
    ClusterBasicInfo:
      description: VMware Cluster basic information.
      type: object
      required:
        - name
        - host_count
        - host_profile
      properties:
        name:
          type: string
          pattern: "^[a-zA-Z][A-Za-z0-9_-]{0,49}$"
          description: Name of the VMware cluster. Cluster names must be unique per Cloud Director site instance. Cluster names cannot be changed after creation.
          minLength: 1
          maxLength: 256
          example: 'cluster_1'
        host_count:
          type: integer
          description: Number of hosts in the VMware cluster.
          minimum: 2
          maximum: 25
        host_profile:
          type: string
          description: The host type. IBM Cloud offers several different host types. Typically, the host type is selected based on the properties of the workload to be run in the VMware cluster.
          minLength: 1
          maxLength: 128
          pattern: '^[0-9a-zA-Z-\_]{1,128}$'
          example: 'BM_2S_20_CORES_192_GB'
    ClusterPrototype:
      description: VMware Cluster order information. Clusters form VMware workload availability boundaries.
      allOf:
        - $ref: "#/components/schemas/ClusterBasicInfo"
        - type: object
          required:
            - file_shares
          properties:
            file_shares:
              $ref: "#/components/schemas/FileSharesPrototype"
      example:
        {
          "name": "cluster_1",
          "host_count": 3,
          "file_shares":
            {
              "STORAGE_TWO_IOPS_GB": 24000,
              "STORAGE_FOUR_IOPS_GB": 24000,
              "STORAGE_TEN_IOPS_GB": 8000,
            },
          "host_profile": "BM_2S_20_CORES_192_GB",
        }
    FileShares:
      description: Chosen storage policies and their sizes.
      type: object
      properties:
        STORAGE_POINT_TWO_FIVE_IOPS_GB:
          type: integer
          description: The amount of 0.25 IOPS/GB storage in GB (1024^3 bytes).
          minimum: 0
          multipleOf: 24000
          maximum: 960000
        STORAGE_TWO_IOPS_GB:
          type: integer
          description: The amount of 2 IOPS/GB storage in GB (1024^3 bytes).
          minimum: 0
          multipleOf: 24000
          maximum: 960000
        STORAGE_FOUR_IOPS_GB:
          type: integer
          description: The amount of 4 IOPS/GB storage in GB (1024^3 bytes).
          minimum: 0
          multipleOf: 24000
          maximum: 960000
        STORAGE_TEN_IOPS_GB:
          type: integer
          description: The amount of 10 IOPS/GB storage in GB (1024^3 bytes).
          minimum: 0
          multipleOf: 4000
          maximum: 960000
      example:
        {
          "STORAGE_POINT_TWO_FIVE_IOPS_GB": 24000,
          "STORAGE_TWO_IOPS_GB": 24000,
          "STORAGE_FOUR_IOPS_GB": 48000,
          "STORAGE_TEN_IOPS_GB": 72000,
        }
    FileSharesPrototype:
      description: Chosen storage policies and their sizes.
      type: object
      properties:
        STORAGE_POINT_TWO_FIVE_IOPS_GB:
          type: integer
          description: The amount of 0.25 IOPS/GB storage in GB (1024^3 bytes).
          minimum: 0
          multipleOf: 24000
          maximum: 960000
        STORAGE_TWO_IOPS_GB:
          type: integer
          description: The amount of 2 IOPS/GB storage in GB (1024^3 bytes).
          minimum: 0
          multipleOf: 24000
          maximum: 960000
        STORAGE_FOUR_IOPS_GB:
          type: integer
          description: The amount of 4 IOPS/GB storage in GB (1024^3 bytes).
          minimum: 0
          multipleOf: 24000
          maximum: 960000
        STORAGE_TEN_IOPS_GB:
          type: integer
          description: The amount of 10 IOPS/GB storage in GB (1024^3 bytes).
          minimum: 0
          multipleOf: 4000
          maximum: 960000
      example:
        {
          "STORAGE_POINT_TWO_FIVE_IOPS_GB": 24000,
          "STORAGE_TWO_IOPS_GB": 24000,
          "STORAGE_FOUR_IOPS_GB": 48000,
          "STORAGE_TEN_IOPS_GB": 72000,
        }
    ErrorDetail:
      description: Error details with additional messages and information.
      type: object
      required:
        - code
      properties:
        more_info:
          type: string
          description: Detailed message of the error.
          example: Internal server error. Your request cannot be processed.
            Wait a few minutes and try again.
        message:
          type: string
          description: Detailed message of the error.
          example: Internal server error. Your request cannot be processed.
            Wait a few minutes and try again.
        code:
          type: string
          description: HTTP status code of the error response.
          enum:
            - "m001_duplicated_workload_domain_name"
            - "m002_invalid_location"
            - "m003_clusters_different_locations"
            - "m004_invalid_storage_policy"
            - "m005_invalid_size_storage_policy"
            - "m006_failed_getting_workload_domain"
            - "m007_failed_creating_workload_domain"
            - "m008_not_found_specific_workload_domain"
            - "m009_deleting_workload_domain"
            - "m010_cannot_delete_workload_domain"
            - "m011_cannot_delete_cluster"
            - "m012_failed_getting_specific_workload_domain"
            - "m013_no_datacenters_found"
            - "m014_empty_clusters"
            - "m015_failed_getting_host_profiles"
            - "m016_failed_getting_cluster"
            - "m017_not_found_cluster_domain"
            - "m018_failed_getting_specific_cluster"
            - "m016_failed_getting_workload_domain_info"
            - "m019_failed_getting_issues_specific_workload_domain"
            - "m021_failed_getting_monitors_info"
            - "m022_failed_creating_edge"
            - "m023_not_found_specific_edge_instance"
            - "m024_getting_specific_edge_instance"
            - "m025_unable_to_delete_edge_instance"
            - "m026_not_found_specific_edge_group"
            - "m027_deleting_edge_group"
            - "m028_edge_already_exist_for_workload_domain"
            - "m029_edge_instance_already_deleted"
            - "m030_storage_type_not_nfs"
            - "m031_workload_domain_not_ready_to_update"
            - "m032_cluster_not_ready_to_update"
            - "m033_cluster_not_updated_with_running_operation"
            - "m034_request_accepted"
            - "m035_failed_to_update_host_count"
            - "m036_failed_getting_cluster_last_operation_status"
            - "m037_invalid_storage_size"
            - "m038_error_input_creating_workload_domain"
            - "m039_invalid_host_count"
            - "m040_invalid_host_profile"
            - "m041_failed_to_update_file_shares"
            - "m042_failed_add_removing_file_shares_same_call"
            - "m043_failed_removing_2_or_more_file_shares_same_call"
            - "m044_failed_removing_24000_more_file_shares_same_call"
            - "m045_no_file_shares_found"
            - "m046_operation_running"
            - "m047_zero_invalid_size_storage_policy"
            - "m048_failed_getting_workload_domain_operations"
            - "m049_duplicated_cluster_name"
            - "m050_failed_creating_cluster"
            - "m051_invalid_host_count_larger"
            - "m052_invalid_min_size"
            - "m053_failed_deleting_cluster"
            - "m054_cannot_delete_last_cluster"
            - "m055_cannot_update_status_director_site"
            - "m056_cannot_update_status_cluster"
            - "m057_not_pvdc_name"
            - "m058_empty_pvdcs"
            - "m059_not_found_specific_pvdc"
            - "m060_pvdc_doesnt_match_cluster_pvdc"
            - "m061_pvdc_clusters_not_ready_or_deleted"
            - "m061_max_pvdc_per_workload"
            - "m062_max_cluster_per_pvdc"
            - "m054_only_delete_last_cluster"
          example: "m059_not_found_specific_pvdc"
    DirectorSiteHostProfile:
      description: Host profile template.
      type: object
      required:
        - id
        - cpu
        - ram
        - processor
        - speed
        - socket
        - manufacturer
        - family
        - features
      properties:
        id:
          type: string
          description: The ID for this host profile.
        cpu:
          minimum: 32
          maximum: 112
          type: integer
          description: The number CPU cores for this host profile.
        family:
          type: string
          description: The CPU family for this host profile
        processor:
          type: string
          description: The CPU type for this host profile.
        ram:
          minimum: 192
          maximum: 6144
          type: integer
          description: The RAM for this host profile in GB (1024^3 bytes).
        socket:
          minimum: 2
          maximum: 4
          type: integer
          description: The number of CPU sockets available for this host profile.
        speed:
          type: string
          description: The CPU clock speed.
        manufacturer:
          type: string
          description: The manufacturer for this host profile.
        features:
          type: array
          description: Additional features for this host profile.
          items:
            type: string
          minItems: 1
          maxItems: 50
    DirectorSite:
      description: A Cloud Director site resource. The Cloud Director site instance is the infrastructure and the associated VMware software stack, which consists of VMware vCenter Server, VMware NSX-T, and VMware Cloud Director.
      type: object
      required:
        - id
        - ordered_at
        - name
        - resource_group
        - pvdcs
        - crn
        - href
        - type
        - status
        - services
        - console_connection_type
        - console_connection_status
        - ip_allow_list
      properties:
        crn:
          type: string
          description: A unique ID for the Cloud Director site in IBM Cloud.
        href:
          type: string
          description: The hyperlink of the Cloud Director site resource.
        id:
          type: string
          description: ID of the Cloud Director site.
        ordered_at:
          type: string
          format: date-time
          description: The time that the Cloud Director site is ordered.
        provisioned_at:
          type: string
          format: date-time
          description: The time that the Cloud Director site is provisioned and available to use.
        name:
          type: string
          description: The name of Cloud Director site. The name of the Cloud Director site cannot be changed after creation.
        status:
          type: string
          description: The status of Cloud Director site.
          enum:
            - creating
            - ready_to_use
            - deleting
            - deleted
            - updating
        resource_group:
          $ref: "#/components/schemas/ResourceGroupReference"
        pvdcs:
          type: array
          description: List of VMware resource pools to deploy on the instance.
          minItems: 1
          maxItems: 10
          items:
            $ref: "#/components/schemas/PVDC"
        type:
          type: string
          description: Director site type.
          enum:
            - 'single_tenant'
            - 'multitenant'
        services:
          type: array
          minItems: 1
          maxItems: 1
          description: Services on the Cloud Director site.
          items:
            $ref: '#/components/schemas/Service'
        rhel_vm_activation_key:
          type: string
          description: RHEL activation key. This property is applicable when type is multitenant.
          minLength: 0
          maxLength: 150
        console_connection_type:
          type: string
          description: Type of director console connection.
          enum:
            - 'public'
            - 'private'
        console_connection_status:
          type: string
          description: Status of director console connection.
          enum:
            - 'creating'
            - 'ready_to_use'
            - 'deleting'
            - 'deleted'
            - 'updating'
        ip_allow_list:
          type: array
          description: Director console IP allowlist.
          minItems: 1
          maxItems: 1
          items:
            type: string
      example:
        {
          "crn": "crn:v1:bluemix:public:vmware:us-south:a/accuntid::directorsite:directorsiteuuid001",
          "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid001",
          "id": "directorsiteuuid001",
          "ordered_at": "2022-12-12 12:12:12Z",
          "provisioned_at": "2022-12-12 12:12:12Z",
          "name": "MyInstance",
          "status": "creating",
          "console_connection_type": "private",
          "console_connection_status": "creating",
          "ip_allow_list": ['1.1.1.1/24'],
          "type": "multitenant",
          "rhel_vm_activation_key": "xxxxxxxxxxxxxxxxxxx",
          "services": [
            {
              "name": "veeam",
              "id": "ed5372b9-c67a-4b4d-a43f-3ac01a6e191e",
              "provisioned_at": "2022-12-06T20:06:59.137069+00:00",
              "ordered_at": "2022-12-06T20:06:59.137069+00:00",
              "status": "creating",
              "console_url": "https://sdirw.jp-tok.vmware.test.cloud.ibm.com:9443/vCloud/1"
            }
          ],
          "resource_group":
            {
              "name": "default",
              "id": "a_resource_group_id",
              "crn": "crn:v1:bluemix:public:resource-controller::a/accuntid::resource-group:resourcegroupid",
            },
          "pvdcs":
            [
              {
                "id": "pvdcuuid001",
                "name": "pvdc-1",
                "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid001/pvdcs/pvdcuuid001",
                "status": "creating",
                "data_center_name": "dal10",
                "clusters":
                  [
                    {
                      "id": "clusteruuid001",
                      "name": "cluster_1",
                      "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid001/pvdcs/pvdcuuid001/clusters/clusteruuid001",
                      "status": "creating",
                      "data_center_name": "dal10",
                      "host_count": 3,
                      "file_shares":
                        {
                          "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
                          "STORAGE_TWO_IOPS_GB": 24000,
                          "STORAGE_FOUR_IOPS_GB": 24000,
                          "STORAGE_TEN_IOPS_GB": 8000,
                        },
                      "host_profile": "BM_2S_20_CORES_192_GB",
                    },
                  ],
                "provider_types": [
                  {
                    "name": "on_demand"
                  },
                  {
                    "name": "reserved"
                  }
                ]
              },
            ],
        }
    DirectorSiteReference:
      description: Back link to associated Cloud Director site resource.
      type: object
      required:
        - id
        - crn
        - href
      properties:
        crn:
          type: string
          description: A unique ID for the Cloud Director site in IBM Cloud.
        href:
          type: string
          description: The hyperlink of the Cloud Director site resource.
        id:
          type: string
          description: ID of the Cloud Director site.
      example:
        {
          "crn": "crn:v1:bluemix:public:vmware:us-south:a/accuntid::directorsite:directorsiteuuid002",
          "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid002",
          "id": "directorsiteuuid002",
        }
    ClusterSummary:
      allOf:
        - $ref: "#/components/schemas/ClusterBasicInfo"
        - type: object
          required:
            - id
            - name
            - status
            - data_center_name
            - href
            - file_shares
          properties:
            id:
              type: string
              description: The cluster ID.
            name:
              type: string
              description: The cluster name.
            data_center_name:
              type: string
              description: The location of the deployed cluster.
            status:
              type: string
              description: The status of the cluster.
            href:
              type: string
              description: The hyperlink of the cluster resource.
            file_shares:
              $ref: "#/components/schemas/FileShares"
      example:
        {
          "id": "clusteruuid003",
          "name": "cluster_1",
          "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid/pvdcs/pvdcuuid/clusters/clusteruuid003",
          "status": "creating",
          "data_center_name": "dal10",
          "host_count": 3,
          "file_shares":
            {
              "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
              "STORAGE_TWO_IOPS_GB": 24000,
              "STORAGE_FOUR_IOPS_GB": 24000,
              "STORAGE_TEN_IOPS_GB": 8000,
            },
          "host_profile": "BM_2S_20_CORES_192_GB",
        }
    PVDC:
      description: VMware resource pool information.
      allOf:
        - $ref: "#/components/schemas/PVDCBasicInfo"
        - type: object
          required:
            - id
            - href
            - clusters
            - status
            - provider_types
          properties:
            id:
              type: string
              description: The resource pool ID.
              minLength: 1
              maxLength: 128
              pattern: ^[A-Za-z0-9_-]{1,128}$
            href:
              type: string
              description: The hyperlink of the resource pool resource.
            clusters:
              type: array
              description: List of VMware clusters to deploy on the instance. Clusters form VMware workload availability boundaries.
              minItems: 1
              maxItems: 1
              items:
                $ref: "#/components/schemas/ClusterSummary"
            status:
              type: string
              description: The status of the resource pool.
              enum:
                - creating
                - ready_to_use
                - deleting
                - deleted
                - updating
            provider_types:
              type: array
              minItems: 1
              maxItems: 30
              description: List of resource pool types.
              items:
                $ref: '#/components/schemas/ProviderType'
      example:
        {
          "id": "pvdcuuid003",
          "name": "pvdc-1",
          "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid/pvdcs/pvdcuuid003",
          "data_center_name": "dal10",
          "status": "creating",
          "clusters":
            [
              {
                "id": "clusteruuid004",
                "name": "cluster_1",
                "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid/pvdcs/pvdcuuid003/clusters/clusteruuid004",
                "status": "creating",
                "data_center_name": "dal10",
                "host_count": 3,
                "file_shares":
                  {
                    "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
                    "STORAGE_TWO_IOPS_GB": 24000,
                    "STORAGE_FOUR_IOPS_GB": 24000,
                    "STORAGE_TEN_IOPS_GB": 8000,
                  },
                "host_profile": "BM_2S_20_CORES_192_GB",
              },
            ],
          "provider_types": [
            {
              "name": "on_demand"
            },
            {
              "name": "reserved"
            }
          ]
        }
    PVDCCollection:
      type: object
      description: "Return all resource pool instances."
      required:
        - pvdcs
      properties:
        pvdcs:
          type: array
          minItems: 0
          maxItems: 256
          description: List of resource pool instances.
          items:
            $ref: "#/components/schemas/PVDC"
      example:
        {
          "pvdcs":
            [
              {
                "id": "pvdcuuid004",
                "name": "pvdc-1",
                "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid/pvdcs/pvdcuuid004",
                "data_center_name": "dal10",
                "status": "creating",
                "clusters":
                  [
                    {
                      "id": "clusteruuid005",
                      "name": "cluster_1",
                      "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid/pvdcs/pvdcuuid004/clusters/clusteruuid005",
                      "status": "creating",
                      "data_center_name": "dal10",
                      "host_count": 3,
                      "file_shares":
                        {
                          "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
                          "STORAGE_TWO_IOPS_GB": 24000,
                          "STORAGE_FOUR_IOPS_GB": 24000,
                          "STORAGE_TEN_IOPS_GB": 8000,
                        },
                      "host_profile": "BM_2S_20_CORES_192_GB",
                    },
                  ],
                "provider_types": [
                  {
                    "name": "on_demand"
                  },
                  {
                    "name": "reserved"
                  }
                ]
              },
            ],
        }
    Cluster:
      description: "A cluster resource"
      type: object
      required:
        - id
        - name
        - ordered_at
        - data_center_name
        - host_count
        - status
        - director_site
        - host_profile
        - storage_type
        - billing_plan
        - file_shares
        - href
      properties:
        id:
          type: string
          description: The cluster ID.
        name:
          type: string
          description: The cluster name.
        href:
          type: string
          description: The hyperlink of the cluster resource.
        ordered_at:
          type: string
          format: date-time
          description: The time that the cluster is ordered.
        provisioned_at:
          type: string
          format: date-time
          description: The time that the cluster is provisioned and available to use.
        host_count:
          minimum: 2
          maximum: 100
          type: integer
          description: The number of hosts in the cluster.
        status:
          type: string
          description: The status of the Cloud Director site cluster.
        data_center_name:
          type: string
          description: The location of deployed cluster.
        director_site:
          $ref: "#/components/schemas/DirectorSiteReference"
        host_profile:
          type: string
          description: The name of the host profile.
        storage_type:
          type: string
          description: The storage type of the cluster.
          enum:
            - nfs
        billing_plan:
          type: string
          description: The billing plan for the cluster.
          enum:
            - monthly
        file_shares:
          $ref: "#/components/schemas/FileShares"
      example:
        {
          "id": "clusteruuid006",
          "data_center_name": "dal10",
          "director_site":
            {
              "id": "directorsiteuuid003",
              "crn": "crn:v1:bluemix:public:vmware:us-south:a/accuntid::directorsite:directorsiteuuid003",
              "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid003",
            },
          "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid003/pvdcs/pvdcuuid/clusters/clusteruuid006",
          "ordered_at": "2022-12-12 12:12:12Z",
          "provisioned_at": "2022-12-12 12:12:12Z",
          "instance_deleted": "2022-12-12 12:12:12Z",
          "host_count": 4,
          "name": "Cluster name",
          "status": "creating",
          "host_profile": "bx2-metal-20x128",
          "billing_plan": "monthly",
          "storage_type": "nfs",
          "file_shares":
            {
              "STORAGE_POINT_TWO_FIVE_IOPS_GB": 24000,
              "STORAGE_TWO_IOPS_GB": 24000,
              "STORAGE_FOUR_IOPS_GB": 24000,
              "STORAGE_TEN_IOPS_GB": 24000,
            },
        }
    BadRequest:
      description: "Bad request"
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 256
          description: "errors"
          items:
            $ref: "#/components/schemas/ErrorDetail"
        trace:
          type: string
          description: Unique ID value to trace the bad request.
          example: "Cloud Director site name"
        status_code:
          minimum: 100
          maximum: 600
          type: integer
          description: HTTP status code of the error response.
          example: 400
      example:
        {
          "trace": "trace id",
          "status_code": 400,
          "errors":
            [
              {
                "code": "m010_cannot_delete_workload_domain",
                "message": "The requested Cloud Director site instance acfb9e70-99ac-47fb-9fbc-38ce7f716e5b is already deleting.",
              },
            ],
        }

    NotFound:
      description: "Not Found"
      required: 
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 256
          description: "errors"
          items:
            $ref: "#/components/schemas/ErrorDetail"
        trace:
          type: string
          description: Unique ID value to trace the request.
          example: "Cloud Director site instance id"
        status_code:
          minimum: 100
          maximum: 600
          type: integer
          description: HTTP status code of the error response.
          example: 404
      example:
        {
          "trace": "trace id",
          "status_code": 404,
          "errors":
            [
              {
                "code": "m013_no_datacenters_found",
                "message": "The requested Cloud Director site instance acfb9e70-99ac-47fb-9fbc-38ce7f716e5b was not found.",
              },
            ],
        }
    DataCenter:
      type: object
      description: Details of the data center.
      required:
        - display_name
        - name
        - uplink_speed
      properties:
        display_name:
          type: string
          description: The display name of the data center.
        name:
          type: string
          description: The name of the data center.
        uplink_speed:
          type: string
          description: The speed available per data center.
    DirectorSiteRegion:
      type: object
      description: The region details.
      required:
        - name
        - data_centers
        - endpoint
      properties:
        name:
          type: string
          description: The region name.
        data_centers:
          type: array
          description: The data center details.
          minItems: 1
          maxItems: 30
          items:
            $ref: "#/components/schemas/DataCenter"
        endpoint:
          type: string
          description: Accessible endpoint of the region.
    MultitenantDirectorSite:
      type: object
      description: Multitenant Cloud Director site details.
      required:
        - name
        - display_name
        - private_only
        - id
        - region
        - pvdcs
        - services
      properties:
        name:
          type: string
          description: Multitenant Cloud Director site name.
        display_name:
          type: string
          description: Multitenant Cloud Director site display name.
        id:
          type: string
          description: Multitenant Cloud Director site ID.
        private_only:
          type: boolean
          description: Indicates whether the site is private only.
        region:
          type: string
          description: Multitenant Cloud Director site region name.
        pvdcs:
          type: array
          minItems: 1
          maxItems: 30
          description: Resource pool details.
          items:
            $ref: '#/components/schemas/MultitenantPVDC'
        services:
          type: array
          minItems: 1
          maxItems: 30
          description: Installed services.
          items:
            type: string
            enum:
              - 'veeam'
              - 'vcda'
    MultitenantPVDC:
      type: object
      description: Multitenant resource pool details.
      required:
        - name
        - id
        - data_center_name
        - provider_types
        - private_only
      properties:
        name:
          type: string
          description: Resource pool name.
        id:
          type: string
          description: Resource pool ID.
        data_center_name:
          type: string
          description: Data center name.
        private_only:
          type: boolean
          description: Indicates whether the resource pool is private only.
        provider_types:
          type: array
          minItems: 1
          maxItems: 30
          description: List of resource pool types.
          items:
            $ref: '#/components/schemas/ProviderType'
    ProviderType:
      type: object
      description: Resource pool type.
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the resource pool type.
          enum:
            - on_demand
            - reserved
    ClusterPatch:
      description: "The cluster patch. Currently, specifying both file_shares and host_count in one call is not supported."
      type: object
      properties:
        file_shares:
          $ref: "#/components/schemas/FileSharesPrototype"
        host_count:
          type: integer
          minimum: 2
          maximum: 25
          description: Number of hosts to add to or remove from the cluster.
      example:
        { "host_count": 2 }
    DirectorSiteRegionCollection:
      description: Success. The request was successfully processed.
      type: object
      required:
        - director_site_regions
      properties:
        director_site_regions:
          type: array
          minItems: 1
          maxItems: 30
          description: Regions of Cloud Director sites.
          items:
            $ref: "#/components/schemas/DirectorSiteRegion"
      example:
        {
          "director_site_regions":
            [
              {
                "name": "us-south",
                "data_centers":
                  [
                    {
                      "display_name": "Dallas 10",
                      "name": "dal10",
                      "uplink_speed": "25GB",
                    },
                    {
                      "display_name": "Dallas 12",
                      "name": "dal12",
                      "uplink_speed": "25GB",
                    },
                    {
                      "display_name": "Dallas 13",
                      "name": "dal13",
                      "uplink_speed": "25GB",
                    },
                  ],
                "endpoint": "https://us-south.managed.vmware.cloud.ibm.com",
              },
            ]
        }
    MultitenantDirectorSiteCollection:
      description: List of multitenant Cloud Director sites.
      type: object
      required:
        - multitenant_director_sites
      properties:
        multitenant_director_sites:
          type: array
          minItems: 1
          maxItems: 30
          description: Multitenant Cloud Director sites.
          items:
            $ref: '#/components/schemas/MultitenantDirectorSite'
      example:
        {
          "multitenant_director_sites": [
            {
              "display_name" : "Dallas Multitenant",
              "name" : "dal_multi-tenant",
              "id" : "123456789",
              "private_only": False,
              "services": ["veeam", "vcda"],
              "region": "us-south",
              "pvdcs": [
                {
                  "name": "Pvdc_1",
                  "id": "123456789",
                  "private_only": False,
                  "data_center_name": "dal12",
                  "provider_types": [
                    {
                      "name": "on_demand"
                    },
                    {
                      "name": "reserved"
                    }
                  ]
                }
              ]
            }
          ]
        }
    DirectorSiteHostProfileCollection:
      description: Success. The request was successfully processed.
      type: object
      required:
        - director_site_host_profiles
      properties:
        director_site_host_profiles:
          type: array
          description: The list of available host profiles.
          minItems: 2
          maxItems: 25
          items:
            $ref: "#/components/schemas/DirectorSiteHostProfile"
      example:
        {
          "director_site_host_profiles":
            [
              {
                "cpu": 32,
                "family": "cascade",
                "features": ["UEFI", "NVMe"],
                "id": "BM_2S_32_CORES_192_GB",
                "manufacturer": "intel",
                "processor": "Dual Intel 5218 Xeon",
                "ram": 192,
                "socket": 2,
                "speed": "2.3 GHz",
              },
              {
                "cpu": 48,
                "family": "cascade",
                "features": ["UEFI", "NVMe"],
                "id": "BM_2S_48_CORES_384_GB",
                "manufacturer": "intel",
                "processor": "Dual Intel 8260 Xeon",
                "ram": 384,
                "socket": 2,
                "speed": "2.4 GHz",
              },
              {
                "cpu": 48,
                "family": "cascade",
                "features": ["UEFI", "NVMe"],
                "id": "BM_2S_48_CORES_768_GB",
                "manufacturer": "intel",
                "processor": "Dual Intel 8260 Xeon",
                "ram": 768,
                "socket": 2,
                "speed": "2.4 GHz",
              },
              {
                "cpu": 96,
                "family": "cascade",
                "features": ["UEFI", "NVMe"],
                "id": "BM_4S_96_CORES_1536_GB",
                "manufacturer": "intel",
                "processor": "Quad Intel 8260 Xeon",
                "ram": 1536,
                "socket": 4,
                "speed": "2.4 GHz",
              },
            ],
        }
    DirectorSiteCollection:
      type: object
      description: "Return all Cloud Director site instances."
      required:
        - director_sites
      properties:
        director_sites:
          type: array
          minItems: 0
          maxItems: 256
          description: List of Cloud Director site instances.
          items:
            $ref: "#/components/schemas/DirectorSite"
      example:
        {
          "director_sites":
            [
              {
                "crn": "crn:v1:bluemix:public:vmware:us-south:a/accuntid::directorsite:directorsiteuuid004",
                "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid004",
                "id": "directorsiteuuid004",
                "ordered_at": "2022-12-12 12:12:12Z",
                "provisioned_at": "2022-12-12 12:12:12Z",
                "name": "MyInstance",
                "type": "multitenant",
                "rhel_vm_activation_key": "xxxxxxxxxxxxxxxxxxx",
                "console_connection_type": "private",
                "console_connection_status": "creating",
                "ip_allow_list": ['1.1.1.1/24'],
                "services": [
                  {
                    "name": "veeam",
                    "id": "ed5372b9-c67a-4b4d-a43f-3ac01a6e191e",
                    "provisioned_at": "2022-12-06T20:06:59.137069+00:00",
                    "ordered_at": "2022-12-06T20:06:59.137069+00:00",
                    "status": "creating",
                    "console_url": "https://sdirw.jp-tok.vmware.test.cloud.ibm.com:9443/vCloud/1"
                  }
                ],
                "status": "ready_to_use",
                "resource_group":
                  {
                    "name": "default",
                    "id": "b_resource_group_id",
                    "crn": "crn:v1:bluemix:public:resource-controller::a/accuntid::resource-group:resourcegroupid",
                  },
                "pvdcs":
                  [
                    {
                      "id": "pvdcuuid005",
                      "name": "pvdc-1",
                      "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid004/pvdcs/pvdcuuid005",
                      "data_center_name": "dal10",
                      "status": "creating",
                      "clusters":
                        [
                          {
                            "id": "clusteruuid007",
                            "name": "cluster_1",
                            "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid004/pvdcs/pvdcuuid005/clusters/clusteruuid007",
                            "status": "creating",
                            "data_center_name": "dal10",
                            "host_count": 3,
                            "file_shares":
                              {
                                "STORAGE_POINT_TWO_FIVE_IOPS_GB": 0,
                                "STORAGE_TWO_IOPS_GB": 24000,
                                "STORAGE_FOUR_IOPS_GB": 24000,
                                "STORAGE_TEN_IOPS_GB": 8000,
                              },
                            "host_profile": "BM_2S_20_CORES_192_GB",
                          },
                        ],
                      "provider_types": [
                        {
                          "name": "on_demand"
                        },
                        {
                          "name": "reserved"
                        }
                      ]
                    },
                  ],
              },
            ],
        }

    ClusterCollection:
      description: "Return all clusters instances."
      type: object
      required:
        - clusters
      properties:
        clusters:
          type: array
          minItems: 0
          maxItems: 256
          description: List of cluster objects.
          items:
            $ref: "#/components/schemas/Cluster"
      example:
        {
          "clusters":
            [
              {
                "id": "clusteruuid008",
                "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid005/pvdcs/pvdcuuid/clusters/clusteruuid008",
                "data_center_name": "dal10",
                "director_site":
                  {
                    "id": "directorsiteuuid005",
                    "crn": "crn:v1:bluemix:public:vmware:us-south:a/accuntid::directorsite:directorsiteuuid005",
                    "href": "https://api.us-south.vmware.cloud.ibm.com/v1/director_sites/directorsiteuuid005",
                  },
                "ordered_at": "2022-12-12 12:12:12Z",
                "provisioned_at": "2022-12-12 12:12:12Z",
                "instance_deleted": "2022-12-12 12:12:12Z",
                "host_count": 4,
                "name": "Cluster instance Name",
                "status": "creating",
                "host_profile": "bx2-metal-20x128",
                "billing_plan": "monthly",
                "storage_type": "nfs",
                "file_shares":
                  {
                    "STORAGE_POINT_TWO_FIVE_IOPS_GB": 24000,
                    "STORAGE_TWO_IOPS_GB": 24000,
                    "STORAGE_FOUR_IOPS_GB": 24000,
                    "STORAGE_TEN_IOPS_GB": 24000,
                  },
              },
            ],
        }

    UpdateCluster:
      description: "Response of cluster update"
      allOf:
        - $ref: "#/components/schemas/Cluster"
        - type: object
          required:
            - message
            - operation_id
          properties:
            message:
              type: string
              description: Information of request accepted.
              example: "The request has been accepted."
            operation_id:
              type: string
              description: ID to track the update operation of the cluster.
              minLength: 1
              maxLength: 64
              pattern: "^[-0-9a-z_]+$"
      example:
        {
          "id": "3b51c519-de2a-47d3-8a69-edf70e52097b",
          "director_site":
            {
              "id": "4b8d2641-5e1b-48c4-bd03-dd66edc824d8",
              "crn":
                "crn:v1:staging:public:vmware:us-south:a/3886cae42be94f6a89c4b7c282708f34::directorsite:
                4b8d2641-5e1b-48c4-bd03-dd66edc824d8",
              "href": "https://api.us-south.vmware.cloud.ibm.com/director_sites/4b8d2641-5e1b-48c4-bd03-dd66edc824d8",
            },
          "ordered_at": "2021-08-26T23:15:55.682215+00:00",
          "provisioned_at": "2021-08-26T23:15:55.682215+00:00",
          "host_count": 4,
          "name": "cluster_instance_1",
          "status": "creating",
          "data_center_name": "dal10",
          "deduplication_and_compression": True,
          "host_profile": "BM_2S_20_CORES_192_GB",
          "billing_plan": "hourly",
          "storage_type": "vsan",
          "file_shares":
            {
              "STORAGE_POINT_TWO_FIVE_IOPS_GB": 200,
              "STORAGE_TWO_IOPS_GB": 0,
              "STORAGE_FOUR_IOPS_GB": 3,
              "STORAGE_TEN_IOPS_GB": 1,
            },
          "message": "The request has been accepted.",
          "operation_id": "4b8d2641-5e1b-48c4-bd03-dd66edc824d7",
        }

    NetworkHaOnStretched:
      description: Information about data centers for network regional HA.
      type: object
      additionalProperties: false
      properties:
        primary_data_center_name:
          description: The name of the primary data center.
          type: string
          minLength: 5
        secondary_data_center_name:
          description: The name of the secondary data center.
          type: string
          minLength: 5
      required:
        - primary_data_center_name
        - secondary_data_center_name

    NetworkHaOnNonStretched:
      description: Information about the ID of the secondary resource pool for network regional HA.
      type: object
      additionalProperties: false
      properties:
        secondary_pvdc_id:
          description: The ID of the secondary resource pool.
          type: string
          minLength: 1
      required:
        - secondary_pvdc_id

    Edge:
      description: A networking edge deployed on a virtual data center (VDC). Networking edges are based on NSX-T and used for bridging virtualize networking to the physical public-internet and IBM private networking.
      type: object
      additionalProperties: false
      properties:
        id:
          description: A unique ID for the edge.
          type: string
        public_ips:
          description: The public IP addresses assigned to the edge.
          type: array
          items:
            description: A public IP address.
            type: string
          minItems: 0
          maxItems: 256
        private_ips:
          description: The private IP addresses assigned to the edge.
          type: array
          items:
            description: A private IP address.
            type: string
          minItems: 0
          maxItems: 128
        private_only:
          description: Indicates whether the edge is private only. The default value is True for a private Cloud Director site and False for a public Cloud Director site.
          type: boolean
        size:
          description: |
            The size of the edge.

            The size can be specified only for performance edges. Larger sizes require more capacity from the Cloud Director site in which the virtual data center (VDC) was created to be deployed.
          type: string
          enum:
            - medium
            - large
            - extra_large
        status:
          description: Determines the state of the edge.
          type: string
          enum:
            - creating
            - ready_to_use
            - deleting
            - deleted
        transit_gateways:
          description: Connected IBM Transit Gateways.
          type: array
          minItems: 0
          maxItems: 128
          items:
            $ref: '#/components/schemas/TransitGateway'
        type:
          description: |
            The type of edge to be deployed.

            Efficiency edges allow for multiple VDCs to share some edge resources. Performance edges do not share resources between VDCs.
          type: string
          enum:
            - performance
            - efficiency
        version:
          description: The edge version.
          type: string
        primary_data_center_name:
          description: The name of the primary data center.
          type: string
          minLength: 5
        secondary_data_center_name:
          description: The name of the secondary data center.
          type: string
          minLength: 5
        primary_pvdc_id:
          description: The ID of the primary resource pool.
          type: string
          minLength: 1
        secondary_pvdc_id:
          description: The ID of the secondary resource pool.
          type: string
          minLength: 1
      required:
        - id
        - public_ips
        - private_ips
        - status
        - transit_gateways
        - type
        - version
        - size
    StatusReason:
      description: Information about why a request cannot be completed or why a resource cannot be created.
      type: object
      properties:
        code:
          description: An error code specific to the error encountered.
          type: string
          enum:
            - insufficent_cpu
            - insufficent_ram
            - insufficent_cpu_and_ram
        message:
          description: A message that describes why the error ocurred.
          type: string
        more_info:
          description: A URL that links to a page with more information about this error.
          type: string
      required:
        - code
        - message
    Error:
      required:
        - code
        - message
      properties:
        code:
          description: Identifier for the error that occurred.
          type: string
          pattern: "^[a-z][a-z0-9]*(_[a-z0-9]+)*$"
          minLength: 1
          maxLength: 512
        message:
          description: Summary of the error that occurred.
          type: string
          pattern: ^.+$
          minLength: 1
          maxLength: 512
        more_info:
          description: Link to more information about the error that occurred.
          type: string
          pattern: ^.+$
          minLength: 1
          maxLength: 512    
    ErrorContainer:
      description: Information about why a request cannot be fulfilled.
      type: object
      properties:
        errors:
          description: A list of errors that ocurred while the request is being processed.
          type: array
          items:
            $ref: "#/components/schemas/Error"
          minItems: 1
          maxItems: 128
        status_code:
          minimum: 100 
          maximum: 600
          description: The HTTP status code used for the response.
          type: integer
        trace:
          description: A unique ID used to identify all back-end activity associated with the failed request.
          type: string
      required:
        - errors
    RequestError:
      description: Information about why a request cannot be completed.
      type: object
      properties:
        code:
          description: An error code specific to the error encountered.
          type: string
          enum:
            - authorization_error
            - bad_request_problem
            - create_edge_locked_error
            - create_edge_size_missing
            - create_edge_unexpected_edge_size
            - create_edge_vdc_not_exist_error
            - create_edge_vdc_not_ready_error
            - create_edge_vdc_has_active_edges_error
            - create_edge_no_cluster_available_in_pvdc_performance_edge_error
            - create_edge_no_cluster_available_in_pvdc_efficiency_edge_error
            - create_edge_medium_performance_error
            - create_edge_too_large_error
            - create_vdc_already_exist_error
            - create_vdc_director_instance_not_found_error
            - create_vdc_director_instance_not_ready_error
            - create_vdc_invalid_resource_group_error
            - create_vdc_locked_error
            - create_vdc_missing_field_error
            - create_vdc_pvdc_not_found_error
            - create_vdc_pvdc_not_ready_error
            - create_vdc_unexpected_edge_size_error
            - create_vdc_no_cluster_available_in_pvdc_performance_edge_error
            - create_vdc_no_cluster_available_in_pvdc_efficiency_edge_error
            - create_vdc_edge_medium_performance_error
            - create_vdc_edge_already_deployed_error
            - create_vdc_edge_too_large_error
            - create_vdc_public_connectivity_not_allowed_on_private_only_director_site
            - delete_vdc_locked_error
            - delete_vdc_not_exist_error
            - delete_vdc_not_ready_error
            - delete_vdc_org_catalog_in_use_error
            - get_vdc_not_exist_error
            - get_oidc_org_not_found_error
            - get_oidc_locked_error
            - set_oidc_org_not_found_error
            - set_oidc_org_to_be_deleted_error
            - set_oidc_configuration_pending_error
            - set_oidc_already_configured_error
            - set_oidc_locked_error
            - service_unavailable
            - o_auth_problem
        message:
          description: A message that describes why the error occurred.
          type: string
        more_info:
          description: A URL that links to a page with more information about this error.
          type: string
      required:
        - code
        - message
    VDCEdgePrototype:
      description: The networking edge to be deployed on the virtual data center (VDC).
      type: object
      additionalProperties: false
      properties:
        size:
          description: The size of the edge. Only used for edges of type performance.
          type: string
          enum:
            - medium
            - large
            - extra_large
        type:
          description: The type of edge to be deployed on the virtual data center (VDC).
          type: string
          enum:
            - performance
            - efficiency
        private_only:
          description: Indicates whether the edge is private only. The default value is True for a private Cloud Director site and False for a public Cloud Director site.
          type: boolean
        network_ha:
          description: Information about the network regional HA edge to be deployed on the VDC.
          oneOf:
            - $ref: '#/components/schemas/NetworkHaOnStretched'
            - $ref: '#/components/schemas/NetworkHaOnNonStretched'
      required:
        - type
    VDCDirectorSitePrototype:
      description: The Cloud Director site in which to deploy the virtual data center (VDC).
      type: object
      additionalProperties: false
      properties:
        id:
          description: A unique ID for the Cloud Director site.
          type: string
          pattern: ^[A-Za-z0-9_-]{1,128}$
          minLength: 1
          maxLength: 128
          example: 'ds_id'
        pvdc:
          $ref: "#/components/schemas/DirectorSitePVDC"
      required:
        - id
        - pvdc
    DirectorSitePVDC:
      description: The resource pool within the Director Site in which to deploy the virtual data center (VDC).
      type: object
      additionalProperties: false
      properties:
        compute_ha_enabled:
          description: Specifies whether compute HA is enabled for this VDC.
          type: boolean
          default: false
        id:
          description: A unique ID for the resource pool.
          type: string
          pattern: ^[A-Za-z0-9_-]{1,128}$
          minLength: 1
          maxLength: 128
          example: 'ds_pvdc_id'
        provider_type:
          $ref: "#/components/schemas/VDCProviderType"
      required:
        - id
    VDCProviderType:
      description: Determines how resources are made available to the virtual data center (VDC). Required for VDCs deployed on a multitenant Cloud Director site.
      type: object
      additionalProperties: false
      properties:
        name:
          description: The name of the resource pool type.
          type: string
          enum:
            - on_demand
            - paygo
            - reserved
      required:
        - name
    VDCPrototype:
      description: Information required to create a virtual data center (VDC).
      type: object
      additionalProperties: false
      properties:
        edge:
          $ref: "#/components/schemas/VDCEdgePrototype"
        name:
          description: A human readable ID for the virtual data center (VDC). Use a name that is unique to your region.
          type: string
          pattern: '^[a-zA-Z][A-Za-z0-9_\-]{1,128}$'
          minLength: 1
          maxLength: 128
          example: 'sampleVDC'
        fast_provisioning_enabled:
          description: Indicates whether to enable or not fast provisioning.
          type: boolean
        resource_group:
          $ref: "#/components/schemas/ResourceGroupIdentity"
        director_site:
          $ref: "#/components/schemas/VDCDirectorSitePrototype"
        cpu:
          type: integer
          description: The vCPU usage limit on the virtual data center (VDC). Supported for VDCs deployed on a multitenant Cloud Director site. This property is required when the resource pool type is reserved.
          minimum: 0
          maximum: 2000
        ram:
          type: integer
          description: The RAM usage limit on the virtual data center (VDC) in GB (1024^3 bytes). Supported for VDCs deployed on a multitenant Cloud Director site. This property is required when the resource pool type is reserved.
          minimum: 0
          maximum: 40960
        rhel_byol:
          type: boolean
          description: Indicates if the RHEL VMs will be using the license from IBM or the customer will use their own license (BYOL).
          default: False
        windows_byol:
          type: boolean
          description: Indicates if the Microsoft Windows VMs will be using the license from IBM or the customer will use their own license (BYOL).
          default: False
      required:
        - name
        - director_site
      example:
        {
          "edge": { "size": "medium", "type": "performance" },
          "name": "sampleVDC",
          "resource_group": { "id": "resourcegroupid" },
          "fast_provisioning_enabled": False,
          "director_site":
            {"id": "directorsiteuuid006", "pvdc": { "id": "pvdcuuid006" } },
        }
    VDCDirectorSite:
      description: The Cloud Director site in which to deploy the virtual data center (VDC).
      type: object
      properties:
        id:
          description: A unique ID for the Cloud Director site.
          type: string
          example: 'ds_id'
          # example: fmt.Sprintf("id-%s", acctest.Get_id())
        pvdc:
          $ref: "#/components/schemas/DirectorSitePVDC"
        url:
          description: The URL of the VMware Cloud Director tenant portal where this virtual data center (VDC) can be managed.
          type: string
      required:
        - id
        - pvdc
        - url
    VDC:
      description: A VMware virtual data center (VDC). VMware VDCs are used to deploy and run VMware virtualized networking and run VMware workloads. VMware VDCs form loose boundaries of networking and workload where networking and workload can be shared or optionally isolated between VDCs. You can deploy one or more VDCs in an instance except when you are using the minimal instance configuration, which consists of 2 hosts (2-Socket 32 Cores, 192 GB RAM). With the minimal instance configuration, you can start with just one VDC and a performance network edge of medium size until additional hosts are added to the cluster.
      type: object
      x-data-source-name: vmaas_vdc
      x-resource-name: vmaas_vdc
      properties:
        href:
          description: The URL of this virtual data center (VDC).
          type: string
        id:
          description: A unique ID for the virtual data center (VDC).
          type: string
        provisioned_at:
          description: The time that the virtual data center (VDC) is provisioned and available to use.
          type: string
          nullable: true
          format: date-time
        cpu:
          type: integer
          description: The vCPU usage limit on the virtual data center (VDC). Supported for VDCs deployed on a multitenant Cloud Director site. This property is applicable when the resource pool type is reserved.
          minimum: 0
          maximum: 10000
        crn:
          description: A unique ID for the virtual data center (VDC) in IBM Cloud.
          type: string
        deleted_at:
          description: The time that the virtual data center (VDC) is deleted.
          type: string
          format: date-time
        ha:
          description: Indicates if the VDC is HA-enabled for compute only, compute and network, or network only. If not present, the VDC is not HA-enabled.
          type: string
        director_site:
          $ref: "#/components/schemas/VDCDirectorSite"
        edges:
          description: The VMware NSX-T networking edges deployed on the virtual data center (VDC). NSX-T edges are used for bridging virtualization networking to the physical public-internet and IBM private networking.
          type: array
          items:
            $ref: "#/components/schemas/Edge"
          minItems: 0
          maxItems: 128
        status_reasons:
          description: Information about why the request to create the virtual data center (VDC) cannot be completed.
          type: array
          items:
            $ref: "#/components/schemas/StatusReason"
          minItems: 0
          maxItems: 128
        name:
          description: A human readable ID for the virtual data center (VDC).
          type: string
        ordered_at:
          description: The time that the virtual data center (VDC) is ordered.
          type: string
          format: date-time
        org_href:
          description: The URL of the organization that owns the VDC.
          type: string
        org_name:
          description: The name of the VMware Cloud Director organization that contains this virtual data center (VDC). VMware Cloud Director organizations are used to create strong boundaries between VDCs. There is a complete isolation of user administration, networking, workloads, and VMware Cloud Director catalogs between different Director organizations.
          type: string
        ram:
          type: integer
          description: The RAM usage limit on the virtual data center (VDC) in GB (1024^3 bytes). Supported for VDCs deployed on a multitenant Cloud Director site. This property is applicable when the resource pool type is reserved.
          minimum: 0
          maximum: 40960
        status:
          description: Determines the state of the virtual data center.
          type: string
          enum:
            - creating
            - ready_to_use
            - modifying
            - deleting
            - deleted
            - failed
        type:
          description: Determines whether this virtual data center is in a single-tenant or multitenant Cloud Director site.
          type: string
          enum:
            - single_tenant
            - multitenant
        fast_provisioning_enabled:
          description: Determines whether this virtual data center has fast provisioning enabled or not.
          type: boolean
        rhel_byol:
          type: boolean
          description: Indicates if the RHEL VMs will be using the license from IBM or the customer will use their own license (BYOL).
        windows_byol:
          type: boolean
          description: Indicates if the Microsoft Windows VMs will be using the license from IBM or the customer will use their own license (BYOL).
      required:
        - id
        - crn
        - href
        - director_site
        - edges
        - status_reasons
        - name
        - ordered_at
        - org_href
        - org_name
        - status
        - type
        - fast_provisioning_enabled
        - rhel_byol
        - windows_byol
    VDCCollection:
      description: A list of virtual data centers (VDCs).
      type: object
      properties:
        vdcs:
          description: A list of virtual data centers (VDCs).
          type: array
          items:
            $ref: "#/components/schemas/VDC"
          minItems: 0
          maxItems: 128
      required:
        - vdcs
    PrivateConnectionPatch:
      type: object
      description: "Data to update a private connection."
      required:
        - allow_list
      properties:
        allow_list:
          type: array
          minItems: 0
          maxItems: 256
          description: List of allowed IP addresses.
          items:
            type: string
          example: [ '1.1.1.1/24', '2.2.2.2/24' ]
      example:
        allow_list: [ '1.1.1.1/24', '2.2.2.2/24' ]
    VDCPatch:
      description: Information required to update a virtual data center (VDC).
      type: object
      additionalProperties: false
      properties:
        cpu:
          type: integer
          description: The vCPU usage limit on the virtual data center (VDC). Supported for VDCs deployed on a multitenant Cloud Director site. This property is required when the resource pool type is reserved.
          minimum: 0
          maximum: 10000
        fast_provisioning_enabled:
          description: Indicates whether to enable or not fast provisioning.
          type: boolean
        ram:
          type: integer
          description: The RAM usage limit on the virtual data center (VDC) in GB (1024^3 bytes). Supported for VDCs deployed on a multitenant Cloud Director site. This property is required when the resource pool type is reserved.
          minimum: 0
          maximum: 40960
    OIDC:
      description: Details of the OIDC configuration on a Cloud Director site.
      type: object
      properties:
        status:
          description: Status of the OIDC configuration on a Cloud Director site.
          type: string
          enum:
            - pending
            - ready_to_use
            - deleted
        last_set_at:
          description: The time after which the OIDC configuration is considered enabled.
          type: string
          format: date-time
      required:
        - status
    TransitGateway:
      description: An IBM Transit Gateway.
      type: object
      additionalProperties: false
      properties:
        id:
          description: A unique ID for an IBM Transit Gateway.
          type: string
        connections:
          description: IBM Transit Gateway connections.
          type: array
          minItems: 1
          maxItems: 128
          items:
            $ref: '#/components/schemas/TransitGatewayConnection'
        status:
          description: |
            Determines the state of the IBM Transit Gateway based on its connections.
          type: string
          enum:
            - pending
            - creating
            - ready_to_use
            - deleting
        region:
          description: The region where the IBM Transit Gateway is deployed.
          type: string
      required:
        - id
        - connections
        - status
        - region
    TransitGatewayConnection:
      description: A connection to an IBM Transit Gateway.
      type: object
      additionalProperties: false
      properties:
        name:
          description: The autogenerated name for this connection.
          type: string
        transit_gateway_connection_name:
          description: The user-defined name of the connection created on the IBM Transit Gateway.
          type: string
        status:
          description: |
            Determines the state of the connection.
          type: string
          enum:
            - pending
            - creating
            - ready_to_use
            - detached
            - deleting
        local_gateway_ip:
          description: Local gateway IP address for the connection.
          type: string
        remote_gateway_ip:
          description: Remote gateway IP address for the connection.
          type: string
        local_tunnel_ip:
          description: Local tunnel IP address for the connection.
          type: string
        remote_tunnel_ip:
          description: Remote tunnel IP address for the connection.
          type: string
        local_bgp_asn:
          minimum: 1
          maximum: 4294967294
          description: Local network BGP ASN for the connection.
          type: integer
        remote_bgp_asn:
          minimum: 1
          maximum: 4294967294
          description: Remote network BGP ASN for the connection.
          type: integer
        network_account_id:
          description: The ID of the account that owns the connected network.
          type: string
        network_type:
          description: The type of the network that is connected through this connection. Only "unbound_gre_tunnel" is supported.
          type: string
        base_network_type:
          description: The type of the network that the unbound GRE tunnel is targeting. Only "classic" is supported.
          type: string
        zone:
          description: The location of the connection.
          type: string
      required:
        - name
        - status
        - network_account_id
        - network_type
        - base_network_type
        - zone
    TransitGatewayRegion:
      description: The region where the IBM Transit Gateway is deployed. If not specified, the IBM Transit Gateway is assumed to be in the same region as the Cloud Director site where the VDC is deployed.
      type: object
      nullable: true
      additionalProperties: false
      properties:
        region:
          description: The region where the IBM Transit Gateway is deployed.
          type: string
          pattern: ^(?!\s*$).+
          minLength: 1
          maxLength: 25
          example: 'jp-tok'

    UsageMeter:
      description: Details of a Usage Meter.
      type: object
      required:
        - id
        - health
      properties:
        id:
          $ref: "#/components/schemas/UniversallyUniqueID"
        health:
          description: Indicates if a Usage Meter reported usage. Possible values are "ok" (The Usage Meter is functioning correctly and reporting usage data), "error" (The Usage Meter encountered an issue and is unable to report usage), or "unknown" (The status of the Usage Meter cannot be determined).
          type: string
          enum:
            - ok
            - error
            - unknown
        version:
          description: The software version of the Usage Meter.
          type: string
          pattern: ^[0-9]+\\.[0-9]+(\\.[0-9]+)?$
          minLength: 1
          maxLength: 512
    UsageMeterIdentity:
      description: Details to identify a Usage Meter.
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/UniversallyUniqueID"
    UsageMeterRegistration:
      description: Details of a Usage Meter registration.
      type: object
      required:
        - id
        - crn
        - name
        - status
        - usage_meter
        - locked
        - created_at
        - href
      properties:
        id:
          $ref: "#/components/schemas/UniversallyUniqueID"
        crn:
          description: The Cloud Resource Name (CRN) for this registration.
          type: string
          pattern: ^[^\s]+.*$
          minLength: 1
          maxLength: 512
        access_token:
          description: Used to activate your Usage Meter after registration so that it can start to report usage.
          type: string
          pattern: ^[^\s]+.*$
          minLength: 1
          maxLength: 512
        name:
          description: Human readable identifier.
          type: string
          pattern: ^[^\s]+.*$
          minLength: 1
          maxLength: 512
        status:
          description: Indicates if a Usage Meter registration is active. If the value is "active", then the Usage Meter is currently registered and in use.
          type: string
          enum:
            - active
        usage_meter:
          $ref: "#/components/schemas/UsageMeter"
        locked:
          description: Indicates if a Usage Meter registration is locked and cannot be deleted.
          type: boolean
        created_at:
          description: The date and time when the Usage Meter registration was created.
          type: string
          format: date-time
          minLength: 25
          maxLength: 32
        href:
          description: The URL with ID as parameter.
          type: string
          pattern: ^((http(s)?):\/\/)?[\w-]+(\.[\w-]+)+([\w.,@?^=%&:\/~+#-]*[\w@?^=%&\/~+#-])?$
          minLength: 1
          maxLength: 512
    UsageMeterRegistrationCollection:
      description: Collection of Usage Meter registrations.
      type: object
      required:
        - usage_meter_registrations
      properties:
        usage_meter_registrations:
          description: List of Usage Meter registrations.
          type: array
          minItems: 0
          maxItems: 512
          items:
            $ref: "#/components/schemas/UsageMeterRegistration"
    UsageMeterRegistrationPrototype:
      description: Details for creating a Usage Meter registration.
      type: object
      required:
        - name
        - usage_meter
      properties:
        name:
          description: Human readable identifier.
          type: string
          pattern: ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$
          minLength: 1
          maxLength: 512
        usage_meter:
          $ref: "#/components/schemas/UsageMeterIdentity"
    UniversallyUniqueID:
      description: Unique identifier.
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      minLength: 36
      maxLength: 36
  
    LicenseKey:
      type: object
      required:
        - value
        - name
      properties:
        value:
          description: License key value.
          pattern: ^[A-Za-z0-9]{5}-[A-Za-z0-9]{5}-[A-Za-z0-9]{5}-[A-Za-z0-9]{5}-[A-Za-z0-9]{5}$
          type: string
          minLength: 29
          maxLength: 29
        name:
          description: Name of software associated to the license key.
          type: string
          pattern: ^.+$
          minLength: 1
          maxLength: 512
    License:
      type: object
      required:
        - license_keys
        - version
      properties:
        license_keys:
          description: License keys for the specified version.
          type: array
          minItems: 1
          maxItems: 512
          items:
            $ref: "#/components/schemas/LicenseKey"
        version:
          description: Version of VMware software.
          type: string
          pattern: ^.+$
          minLength: 1
          maxLength: 512
    LicenseCollection:
      description: Collection of licenses.
      type: object
      required:
        - licenses
      properties:
        licenses:
          description: Licenses array.
          type: array
          minItems: 0
          maxItems: 512
          items:
            $ref: "#/components/schemas/License"

  examples:
    CreateVDC:
      value:
        id: id
        crn: "crn:v1:bluemix:public:vmware:us-south:a/accuntid::vdc:vdcuuid"
        href: "https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/id"
        director_site:
          id: "directorsiteuuid007"
          pvdc:
            id: "pvdcuuid007"
            provider_type:
              name: paygo
          url: "https://sdaldir04.vmware-solutions.cloud.ibm.com/tenant/org"
        edges: []
        status_reasons: []
        name: vdc
        ordered_at: "2022-12-12 12:12:12Z"
        org_href: 'https://api.us-south.vmware.cloud.ibm.com/api/org/id'
        org_name: org
        rhel_activation_key: 'xxxxxxx-xxx-xxxx-xxxx-xxxxxxxxxx'
        resource_group:
          id: default
        status: creating
        type: single_tenant
        fast_provisioning_enabled: False
        rhel_byol: False
        windows_byol: False
    ErrorContainer:
      value:
        errors:
          - code: bad_request_problem
            message: The service encountered an unexpected error
            more_info: /link/to/error/doc
        status_code: 400
        trace: "some trace info"
    GetVDC:
      value:
        id: id
        provisioned_at: "2022-12-12 12:12:12Z"
        crn: "crn:v1:bluemix:public:vmware:us-south:a/accuntid::vdc:vdcuuid"
        href: "https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/id"
        director_site:
          id: "directorsiteuuid008"
          pvdc:
            id: "pvdcuuid008"
            provider_type:
              name: paygo
          url: "https://sdaldir04.vmware-solutions.cloud.ibm.com/tenant/org"
        edges:
          - id: edge-id-1
            public_ips:
              - 192.168.0.2
              - 192.168.0.3
              - 192.168.0.4
              - 192.168.0.5
              - 192.168.0.6
              - 192.168.0.7
            private_ips: []
            size: medium
            status: ready_to_use
            transit_gateways:
              - id: id
                status: ready_to_use
                connections:
                  - name: connection
                    transit_gateway_connection_name: transit_gateway_connection
                    local_gateway_ip: 192.168.1.1
                    remote_gateway_ip: 192.168.1.2
                    local_tunnel_ip: 192.168.2.1
                    remote_tunnel_ip: 192.168.2.2
                    local_bgp_asn: 0987654321
                    remote_bgp_asn: 0987654321
                    status: ready_to_use
                    network_account_id: 28e4d90ac7504be694471ee66e70d0d5
                    network_type: unbound_gre_tunnel
                    base_network_type: classic
                    zone: us-south-1
            type: performance
            version: '2.0'
            private_only: False
        status_reasons: []
        name: vdc
        ordered_at: "2022-12-12 12:12:12Z"
        org_href: 'https://api.us-south.vmware.cloud.ibm.com/api/org/id'
        org_name: org
        rhel_activation_key: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
        resource_group:
          id: default
        status: ready_to_use
        type: single_tenant
        fast_provisioning_enabled: False
        rhel_byol: False
        windows_byol: False
    DeleteVDC:
      value:
        id: id
        provisioned_at: "2022-12-12 12:12:12Z"
        crn: "crn:v1:bluemix:public:vmware:us-south:a/accuntid::vdc:vdcuuid"
        href: "https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/id"
        director_site:
          id: "directorsiteuuid009"
          pvdc:
            id: "pvdcuuid009"
            provider_type:
              name: paygo
          url: "https://sdaldir04.vmware-solutions.cloud.ibm.com/tenant/org"
        edges:
          - id: edge-id-1
            public_ips:
              - 192.168.0.2
              - 192.168.0.3
              - 192.168.0.4
              - 192.168.0.5
              - 192.168.0.6
              - 192.168.0.7
            private_ips: []
            size: medium
            status: ready_to_use
            transit_gateways: []
            type: performance
            version: '1.0'
            private_only: False
        status_reasons: []
        name: vdc
        ordered_at: "2022-12-12 12:12:12Z"
        org_href: 'https://api.us-south.vmware.cloud.ibm.com/api/org/id'
        org_name: org
        resource_group:
          id: default
        status: deleting
        type: single_tenant
        fast_provisioning_enabled: False
        rhel_byol: False
        windows_byol: False
    VDCCollection:
      value:
        vdcs:
          - id: id
            provisioned_at: "2022-12-12 12:12:12Z"
            crn: "crn:v1:bluemix:public:vmware:us-south:a/accuntid::vdc:vdcuuid"
            href: "https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/id"
            director_site:
              id: "directorsiteuuid010"
              pvdc:
                id: "pvdcuuid010"
                provider_type:
                  name: paygo
              url: "https://sdaldir04.vmware-solutions.cloud.ibm.com/tenant/org"
            edges:
              - id: edge-id-1
                public_ips:
                  - 192.168.0.2
                  - 192.168.0.3
                  - 192.168.0.4
                  - 192.168.0.5
                  - 192.168.0.6
                  - 192.168.0.7
                private_ips: []
                size: medium
                status: ready_to_use
                transit_gateways:
                  - id: id
                    status: ready_to_use
                    connections:
                      - name: connection
                        transit_gateway_connection_name: transit_gateway_connection
                        local_gateway_ip: 192.168.1.1
                        remote_gateway_ip: 192.168.1.2
                        local_tunnel_ip: 192.168.2.1
                        remote_tunnel_ip: 192.168.2.2
                        local_bgp_asn: 0987654321
                        remote_bgp_asn: 0987654321
                        status: ready_to_use
                        network_account_id: 28e4d90ac7504be694471ee66e70d0d5
                        network_type: unbound_gre_tunnel
                        base_network_type: classic
                        zone: us-south-1
                type: performance
                version: '2.0'
                private_only: False
            status_reasons: []
            name: vdc
            ordered_at: "2022-12-12 12:12:12Z"
            org_href: 'https://api.us-south.vmware.cloud.ibm.com/api/org/id'
            org_name: org
            rhel_activation_key: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
            resource_group:
              id: default
            status: ready_to_use
            type: single_tenant
            fast_provisioning_enabled: False
            rhel_byol: False
            windows_byol: False
    UpdateVDC:
      value:
        id: id
        created_at: '2022-01-01 12:00:00+00'
        crn: 'crn:v1:bluemix:public:vmware:us-south:a/account_id::vdc:id'
        href: 'https://api.us-south.vmware.cloud.ibm.com/v1/vdcs/id'
        director_site:
          ha: 'compute_only'
          id: '12345678-9abc-defg-ijkl-mnopqrstuvwx'  # pragma: allowlist secret
          pvdc:
            id: '12345678-9abc-defg-ijkl-mnopqrstuvwx'  # pragma: allowlist secret
            provider_type:
              name: paygo
          url: 'https://sdaldir04.vmware-solutions.cloud.ibm.com/tenant/org'
        edges:
          - id: edge-id-1
            public_ips:
              - 192.168.0.2
              - 192.168.0.3
              - 192.168.0.4
              - 192.168.0.5
              - 192.168.0.6
              - 192.168.0.7
            private_ips: []
            size: medium
            status: ready_to_use
            type: performance
            transit_gateways: []
            version: '1.0'
            private_only: False
        status_reasons: []
        name: vdc
        ordered_at: '2022-01-01 12:00:00+00'
        org_href: 'https://api.us-south.vmware.cloud.ibm.com/api/org/id'
        org_name: org
        resource_group:
          id: default
        status: modifying
        type: single_tenant
        fast_provisioning_enabled: False
        rhel_byol: False
        windows_byol: False
    GetOIDC:
      value:
        status: ready_to_use
        last_set_at: 2022-01-01 12:00:00+00
    SetOIDC:
      value:
        status: pending
        last_set_at: 2022-01-01 12:00:00+00
    TransitGateway:
      value:
        id: 20bcbdac-27ed-4186-a1da-de6f28de401e
        region: us-south
        connections:
          - name: connection
            transit_gateway_connection_name: transit_gateway_connection
            local_gateway_ip: 192.168.1.1
            remote_gateway_ip: 192.168.1.2
            local_tunnel_ip: 192.168.2.1
            remote_tunnel_ip: 192.168.2.2
            local_bgp_asn: 0987654321
            remote_bgp_asn: 0987654321
            status: ready_to_use
            network_account_id: 28e4d90ac7504be694471ee66e70d0d5
            network_type: unbound_gre_tunnel
            base_network_type: classic
            zone: us-south-1
        status: ready_to_use
    AddTransitGatewayConnections:
      value:
        id: 20bcbdac-27ed-4186-a1da-de6f28de401e
        region: jp-tok
        connections:
          - name: connection
            status: pending
            network_account_id: 28e4d90ac7504be694471ee66e70d0d5
            network_type: unbound_gre_tunnel
            base_network_type: classic
            zone: jp-tok-1
        status: pending
    UsageMeterRegistrationCollection:
      summary: Default
      value:
        {
          "usage_meter_registrations":
            [
              {
                "id": "04588250-131a-41d6-ac8c-671f768aaa18",
                "crn": "crn:v1:bluemix:public:vmware:global:a/a16bedb7571f43f8920a49e037f598d7::usage-meter:04588250-131a-41d6-ac8c-671f768aaa18",
                "name": "name",
                "status": "active",
                "usage_meter":
                  {
                    "id": "4242b01d-2db2-4d7b-ad5d-0792c61295a8",
                    "health": "ok",
                  },
                "locked": False,
                "created_at": "2024-11-18T17:24:37.720474+00:00",
                "href": "https://licensing.vmware.cloud.ibm.com/v1/usage_meter_registrations/04588250-131a-41d6-ac8c-671f768aaa18"
              },
            ],
        }
    UsageMeterRegistrationPrototype:
      summary: Default
      value:
        {
          "name": "string",
          "usage_meter": {"id": "4242b01d-2db2-4d7b-ad5d-0792c61295a8"}
        }
    UsageMeterRegistration:
      summary: Default
      value:
        {
          "id": "04588250-131a-41d6-ac8c-671f768aaa18",
          "crn": "crn:v1:bluemix:public:vmware:global:a/a16bedb7571f43f8920a49e037f598d7::usage-meter:04588250-131a-41d6-ac8c-671f768aaa18",
          "name": "name",
          "status": "active",
          "usage_meter":
            { "id": "4242b01d-2db2-4d7b-ad5d-0792c61295a8", "health": "ok" },
          "locked": False,
          "created_at": "2024-11-18T17:24:37.720474+00:00",
          "href": "https://licensing.vmware.cloud.ibm.com/v1/usage_meter_registrations/04588250-131a-41d6-ac8c-671f768aaa18"
       }

  responses:
    "400":
      description: The input data is either incomplete or in the wrong format.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorContainer"
          examples:
            default:
              $ref: "#/components/examples/ErrorContainer"
    "401":
      description: You are not allowed to make this request because of a missing or bad authentication token.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorContainer"
          examples:
            default:
              $ref: "#/components/examples/ErrorContainer"
    "403":
      description: You are not allowed to make this request because you do not have enough permissions to perform this operation.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorContainer"
          examples:
            default:
              $ref: "#/components/examples/ErrorContainer"
    "404":
      description: The requested resource cannot be found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorContainer"
          examples:
            default:
              $ref: "#/components/examples/ErrorContainer"
    "409":
      description: The request cannot be completed because of a conflict.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorContainer'
          examples:
            default:
              $ref: '#/components/examples/ErrorContainer'
    "423":
      description: The request cannot be completed at this time. Try again later.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorContainer'
          examples:
            default:
              $ref: '#/components/examples/ErrorContainer'
    "503":
      description: The request cannot be completed because the service is not available.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorContainer"

    CreateVDC:
      description: The request to create a virtual data center (VDC) is accepted.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VDC"
          examples:
            default:
              $ref: "#/components/examples/CreateVDC"
    GetVDC:
      description: The request to get a virtual data center (VDC) completed successfully.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VDC"
          examples:
            default:
              $ref: "#/components/examples/GetVDC"
    VDCCollection:
      description: The request to list virtual data centers (VDCs) completed successfully.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VDCCollection"
          examples:
            default:
              $ref: "#/components/examples/VDCCollection"
    DeleteVDC:
      description: The request to delete a virtual data center (VDC) is accepted.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VDC"
          examples:
            default:
              $ref: "#/components/examples/DeleteVDC"
    UpdateVDC:
      description: The request to update a virtual data center (VDC) is accepted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VDC'
          examples:
            default:
              $ref: '#/components/examples/UpdateVDC'
    GetOIDC:
      description: The request to get the OIDC configuration is successful.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OIDC'
          examples:
            default:
              $ref: '#/components/examples/GetOIDC'
    SetOIDC:
      description: The request to create an OIDC configuration is accepted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OIDC'
          examples:
            default:
              $ref: '#/components/examples/SetOIDC'
    AddTransitGatewayConnections:
      description: The request to connect to an IBM Transit Gateway is accepted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransitGateway'
          examples:
            default:
              $ref: '#/components/examples/AddTransitGatewayConnections'
    RemoveTransitGatewayConnections:
      description: The request to disconnect from an IBM Transit Gateway is accepted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransitGateway'
          examples:
            default:
              $ref: '#/components/examples/TransitGateway'
    SwapEdgeNetworkLocations:
      description: The request to swap the locations of the network regional HA edge is accepted.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "The request to swap the locations of the network regional HA edge is accepted"
          examples:
            default:
              value:
                message: "The request to swap the locations of the network regional HA edge is accepted"

  securitySchemes:
    IAM:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: ic4v_flask.middleware.auth.validate_token

tags:
  - name: Director Site
    description: APIs to manage sites.
  - name: VDC
    description: APIs to manage virtual data center (VDC) instances.
  - name: Licenses
    description: APIs to manage VMware licenses.

x-tagGroups:
  - name: API Reference
    tags:
      - Director Site
      - VDC
      - Licenses

security:
  - IAM: []
